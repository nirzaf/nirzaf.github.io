3:I[8369,[],""]
5:I[7206,[],""]
6:I[6124,["1893","static/chunks/1893-82c44e1e1ff4f13a.js","3185","static/chunks/app/layout-10e948e6073f84a8.js"],"ThemeProvider"]
7:I[1893,["1893","static/chunks/1893-82c44e1e1ff4f13a.js","231","static/chunks/231-b72d69e4329a1be1.js","308","static/chunks/app/blog/%5Bslug%5D/page-d7c48434154c3f65.js"],""]
8:I[6159,["1893","static/chunks/1893-82c44e1e1ff4f13a.js","231","static/chunks/231-b72d69e4329a1be1.js","1931","static/chunks/app/page-88df9313d37b14f9.js"],"HeaderSearch"]
9:I[5727,["1893","static/chunks/1893-82c44e1e1ff4f13a.js","3185","static/chunks/app/layout-10e948e6073f84a8.js"],"MobileMenu"]
a:I[94,["1893","static/chunks/1893-82c44e1e1ff4f13a.js","3185","static/chunks/app/layout-10e948e6073f84a8.js"],"ThemeToggle"]
4:["slug","you-are-doing-validation-wrong-in-net-code","d"]
0:["GpO592H_LkmWyA7BodWZx",[[["",{"children":["blog",{"children":[["slug","you-are-doing-validation-wrong-in-net-code","d"],{"children":["__PAGE__?{\"slug\":\"you-are-doing-validation-wrong-in-net-code\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["blog",{"children":[["slug","you-are-doing-validation-wrong-in-net-code","d"],{"children":["__PAGE__",{},[["$L1","$L2",null],null],null]},[null,["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[null,["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/0b32324c4996f85d.css","precedence":"next","crossOrigin":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"className":"__variable_d65c78 __variable_5899e0 antialiased min-h-screen flex flex-col","children":["$","$L6",null,{"children":[["$","header",null,{"className":"bg-white dark:bg-gray-900 shadow-md","children":["$","div",null,{"className":"container mx-auto px-4 py-3 flex justify-between items-center","children":[["$","$L7",null,{"href":"/","className":"flex items-center hover:opacity-90 transition-opacity","children":["$","div",null,{"className":"flex items-center","children":[["$","div",null,{"className":"relative h-12 w-16 md:h-14 md:w-20","children":["$","img",null,{"src":"https://ik.imagekit.io/quadrate/assets/img/dotnetevangelist/dotnetlogo.png?updatedAt=1746982028912","alt":".NET Logo","className":"object-contain h-full w-full"}]}],["$","span",null,{"className":"text-xl md:text-2xl font-bold bg-gradient-to-r from-blue-500 to-cyan-400 text-transparent bg-clip-text ml-1","children":"Evangelist"}]]}]}],["$","div",null,{"className":"flex-1 mx-6 max-w-md hidden md:block","children":["$","$L8",null,{}]}],["$","div",null,{"className":"flex items-center space-x-6","children":[["$","nav",null,{"className":"hidden md:block","children":["$","ul",null,{"className":"flex space-x-8","children":[["$","li",null,{"children":["$","$L7",null,{"href":"/","className":"text-gray-800 dark:text-gray-200 font-medium hover:text-blue-600 dark:hover:text-blue-400 py-2 transition-colors relative group","children":["Home",["$","span",null,{"className":"absolute bottom-0 left-0 w-0 h-0.5 bg-blue-600 dark:bg-blue-400 group-hover:w-full transition-all duration-300"}]]}]}],["$","li",null,{"children":["$","$L7",null,{"href":"/blog","className":"text-gray-800 dark:text-gray-200 font-medium hover:text-blue-600 dark:hover:text-blue-400 py-2 transition-colors relative group","children":["Blogs",["$","span",null,{"className":"absolute bottom-0 left-0 w-0 h-0.5 bg-blue-600 dark:bg-blue-400 group-hover:w-full transition-all duration-300"}]]}]}],["$","li",null,{"children":["$","$L7",null,{"href":"/about","className":"text-gray-800 dark:text-gray-200 font-medium hover:text-blue-600 dark:hover:text-blue-400 py-2 transition-colors relative group","children":["About",["$","span",null,{"className":"absolute bottom-0 left-0 w-0 h-0.5 bg-blue-600 dark:bg-blue-400 group-hover:w-full transition-all duration-300"}]]}]}]]}]}],["$","$L9",null,{}],["$","$La",null,{}]]}]]}]}],["$","main",null,{"className":"flex-grow","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"container mx-auto px-4 py-16 text-center","children":[["$","h1",null,{"className":"text-4xl font-bold mb-4","children":"404 - Page Not Found"}],["$","p",null,{"className":"text-xl text-gray-600 dark:text-gray-300 mb-8","children":"The page you are looking for does not exist."}],["$","div",null,{"className":"flex justify-center","children":["$","$L7",null,{"href":"/","className":"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded","data-cy":"home-link","children":"Return Home"}]}]]}],"notFoundStyles":[]}]}],["$","footer",null,{"className":"bg-white dark:bg-gray-900 py-8 mt-12 border-t border-gray-200 dark:border-gray-800","children":["$","div",null,{"className":"container mx-auto px-4","children":["$","div",null,{"className":"flex flex-col md:flex-row justify-between items-center","children":[["$","div",null,{"className":"mb-6 md:mb-0","children":[["$","$L7",null,{"href":"/","className":"flex items-center hover:opacity-90 transition-opacity mb-4","children":["$","div",null,{"className":"flex items-center","children":[["$","div",null,{"className":"relative h-10 w-14 md:h-12 md:w-16","children":["$","img",null,{"src":"https://ik.imagekit.io/quadrate/assets/img/dotnetevangelist/dotnetlogo.png?updatedAt=1746982028912","alt":".NET Logo","className":"object-contain h-full w-full"}]}],["$","span",null,{"className":"text-lg md:text-xl font-bold bg-gradient-to-r from-blue-500 to-cyan-400 text-transparent bg-clip-text ml-1","children":"Evangelist"}]]}]}],["$","p",null,{"className":"text-gray-600 dark:text-gray-300 mt-2","children":"Â© 2025 .NET Evangelist. All rights reserved."}]]}],["$","div",null,{"className":"grid grid-cols-2 gap-x-8 gap-y-4","children":[["$","div",null,{"children":[["$","h3",null,{"className":"text-sm font-semibold text-gray-800 dark:text-white uppercase tracking-wider mb-3","children":"Navigation"}],["$","ul",null,{"className":"space-y-2","children":[["$","li",null,{"children":["$","$L7",null,{"href":"/","className":"text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors font-medium","children":"Home"}]}],["$","li",null,{"children":["$","$L7",null,{"href":"/blog","className":"text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors font-medium","children":"Blogs"}]}],["$","li",null,{"children":["$","$L7",null,{"href":"/about","className":"text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors font-medium","children":"About"}]}]]}]]}],["$","div",null,{"children":[["$","h3",null,{"className":"text-sm font-semibold text-gray-800 dark:text-white uppercase tracking-wider mb-3","children":"Connect"}],["$","ul",null,{"className":"space-y-2","children":[["$","li",null,{"children":["$","a",null,{"href":"#","className":"text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors flex items-center font-medium","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","className":"h-4 w-4 mr-2","fill":"currentColor","viewBox":"0 0 24 24","children":["$","path",null,{"d":"M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z"}]}],"Twitter"]}]}],["$","li",null,{"children":["$","a",null,{"href":"#","className":"text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors flex items-center font-medium","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","className":"h-4 w-4 mr-2","fill":"currentColor","viewBox":"0 0 24 24","children":["$","path",null,{"d":"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"}]}],"GitHub"]}]}],["$","li",null,{"children":["$","a",null,{"href":"#","className":"text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors flex items-center font-medium","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","className":"h-4 w-4 mr-2","fill":"currentColor","viewBox":"0 0 24 24","children":["$","path",null,{"d":"M4.98 3.5c0 1.381-1.11 2.5-2.48 2.5s-2.48-1.119-2.48-2.5c0-1.38 1.11-2.5 2.48-2.5s2.48 1.12 2.48 2.5zm.02 4.5h-5v16h5v-16zm7.982 0h-4.968v16h4.969v-8.399c0-4.67 6.029-5.052 6.029 0v8.399h4.988v-10.131c0-7.88-8.922-7.593-11.018-3.714v-2.155z"}]}],"LinkedIn"]}]}]]}]]}]]}]]}]}]}]]}]}]}]],null],null],["$Lb",null]]]]
c:I[2364,["1893","static/chunks/1893-82c44e1e1ff4f13a.js","231","static/chunks/231-b72d69e4329a1be1.js","308","static/chunks/app/blog/%5Bslug%5D/page-d7c48434154c3f65.js"],"BlogContent"]
e:I[231,["1893","static/chunks/1893-82c44e1e1ff4f13a.js","231","static/chunks/231-b72d69e4329a1be1.js","308","static/chunks/app/blog/%5Bslug%5D/page-d7c48434154c3f65.js"],"Image"]
d:T2841,{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    strong: \"strong\",\n    h2: \"h2\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    code: \"code\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Validation is a vital component in ensuring data integrity, but many developers follow inefficient or incorrect practices that can hurt performance and maintainability.\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Introduction\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In this article, we explore common mistakes developers make when implementing validation in .NET applications. Validation is a vital component in ensuring data integrity, but many developers follow inefficient or incorrect practices that can hurt performance and maintainability. Let's delve into both bad and improved validation practices, along with code examples.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Main Content\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Common Bad Practices\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"1. Console Logging in Validation:\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Example\"\n        }), \": A validation method checks a userâs name, age, and email, logs an error to the console, and returns \", _jsx(_components.code, {\n          children: \"false\"\n        }), \" if validation fails.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Issue\"\n        }), \": Logging to the console within a validation method mixes validation logic with output logic. This practice is inappropriate for non-console applications and reduces code clarity. Additionally, it can clutter the console output and make it harder to debug other parts of the application.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"2. Returning Enumerable of Strings:\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Example\"\n        }), \": Returning an \", _jsx(_components.code, {\n          children: \"IEnumerable<string>\"\n        }), \" with error messages when validation fails.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Issue\"\n        }), \": This method is inefficient as it creates a new list with each call and isn't intuitive for consumers to understand that an empty list means validation passed. It also makes it difficult to handle validation results consistently, as consumers need to check the list's contents rather than a simple boolean flag.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Sample Bad Validation Code\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-csharp\",\n        children: \"public bool Validate(User user)\\n{\\n    if (string.IsNullOrEmpty(user.Name))\\n    {\\n        Console.WriteLine(\\\"Name cannot be empty\\\");\\n        return false;\\n    }\\n    if (user.Age < 18 || user.Age > 120)\\n    {\\n        Console.WriteLine(\\\"Age must be between 18 and 120\\\");\\n        return false;\\n    }\\n    if (string.IsNullOrEmpty(user.Email) || !user.Email.Contains(\\\"@\\\"))\\n    {\\n        Console.WriteLine(\\\"Email is not valid\\\");\\n        return false;\\n    }\\n    return true;\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Preferred Validation Approach\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"1. Fail Fast Approach:\"\n      }), \"\\nThis method allows the program to halt validation at the first encountered error, improving performance, especially when dealing with expensive operations like database queries. By stopping early, you avoid unnecessary checks and can provide immediate feedback to the user.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"2. Using Tuples for Validation Results:\"\n      }), \"\\nReturning a tuple of \", _jsx(_components.code, {\n        children: \"bool IsValid\"\n      }), \" and \", _jsx(_components.code, {\n        children: \"IEnumerable<string> Errors\"\n      }), \" ensures clearer feedback, making it easy to identify what went wrong during validation. This approach separates the validation logic from the error handling logic, making the code more modular and easier to maintain.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"3. Static Methods for Pure Functions:\"\n      }), \"\\nValidation methods that do not alter object states should be static to improve predictability and ease of testing. Static methods are easier to test because they do not depend on the state of an instance, and they can be reused across different parts of the application.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Improved Validation Code\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-csharp\",\n        children: \"public (bool IsValid, IEnumerable<string> Errors) Validate(User user)\\n{\\n    var errors = new List<string>();\\n\\n    if (string.IsNullOrEmpty(user.Name))\\n    {\\n        errors.Add(\\\"Name cannot be empty\\\");\\n    }\\n    if (user.Age < 18 || user.Age > 120)\\n    {\\n        errors.Add(\\\"Age must be between 18 and 120\\\");\\n    }\\n    if (string.IsNullOrEmpty(user.Email) || !user.Email.Contains(\\\"@\\\"))\\n    {\\n        errors.Add(\\\"Email is not valid\\\");\\n    }\\n\\n    return (errors.Count == 0, errors);\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Advanced Functional Approach\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"For developers familiar with functional programming, using discriminated unions like Either monads in validation ensures cleaner error handling and early exits. This method returns either an error or the validated object, structuring the validation logic for better API integration. Discriminated unions provide a way to represent a value that can be one of several different types, making it easier to handle different validation outcomes.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Example:\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-csharp\",\n        children: \"public Validation<User> Validate(User user)\\n{\\n    if (string.IsNullOrEmpty(user.Name))\\n    {\\n        return Validation<User>.Error(\\\"Name cannot be empty\\\");\\n    }\\n    if (user.Age < 18 || user.Age > 120)\\n    {\\n        return Validation<User>.Error(\\\"Age must be between 18 and 120\\\");\\n    }\\n    if (string.IsNullOrEmpty(user.Email) || !user.Email.Contains(\\\"@\\\"))\\n    {\\n        return Validation<User>.Error(\\\"Email is not valid\\\");\\n    }\\n    return Validation<User>.Success(user);\\n}\\n\\n// Usage\\nvar result = Validate(user);\\nresult.Match(\\n    success => Console.WriteLine(\\\"Validation passed\\\"),\\n    error => Console.WriteLine($\\\"Validation failed: {error}\\\")\\n);\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Conclusion\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Effective validation in .NET requires a clean, efficient approach. Avoid bad practices such as mixing validation with output logic or relying on exception-driven control flow. By adopting better techniques like the Fail Fast approach, tuples for validation results, and functional programming principles, you can enhance the performance, maintainability, and clarity of your code.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Additional Tips:\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Use Data Annotations:\"\n        }), \" For simple validation scenarios, consider using data annotations. They provide a declarative way to specify validation rules directly on your model properties.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Custom Validation Attributes:\"\n        }), \" If built-in data annotations are not sufficient, create custom validation attributes to encapsulate complex validation logic.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Fluent Validation Libraries:\"\n        }), \" Libraries like FluentValidation offer a fluent interface for building validation rules, making the code more readable and maintainable.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"By following these best practices, you can ensure that your .NET applications are robust, maintainable, and provide a better user experience.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}2:["$","article",null,{"className":"container mx-auto px-4 py-8 max-w-4xl","children":[["$","div",null,{"className":"mb-8","children":[["$","div",null,{"className":"flex items-center text-sm text-gray-500 dark:text-gray-400 mb-4","children":[["$","span",null,{"children":"2024-10-18"}],["$","span",null,{"className":"mx-2","children":"â¢"}],["$","span",null,{"children":["4"," min read"]}]]}],["$","h1",null,{"className":"text-4xl font-bold mb-4","children":"Youâre Doing Validation Wrong in .NET"}],["$","p",null,{"className":"text-xl text-gray-600 dark:text-gray-300 mb-6","children":"Explore common mistakes and improved practices for validation in .NET applications."}],["$","div",null,{"className":"aspect-video relative overflow-hidden rounded-lg mb-8","children":["$","img",null,{"src":"https://ik.imagekit.io/quadrate/assets/img/dotnetevangelist/image.png?updatedAt=1746822319204","alt":"Youâre Doing Validation Wrong in .NET","className":"object-cover w-full h-full"}]}],["$","div",null,{"className":"flex flex-wrap gap-2 mb-8","children":[["$","$L7","Validation",{"href":"/tags/Validation","className":"text-sm bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 px-3 py-1 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Validation"]}],["$","$L7","C#",{"href":"/tags/C#","className":"text-sm bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 px-3 py-1 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","C#"]}],["$","$L7","Best Practices",{"href":"/tags/Best Practices","className":"text-sm bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 px-3 py-1 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Best Practices"]}],["$","$L7","Code Quality",{"href":"/tags/Code Quality","className":"text-sm bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 px-3 py-1 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Code Quality"]}],["$","$L7","Error Handling",{"href":"/tags/Error Handling","className":"text-sm bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 px-3 py-1 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Error Handling"]}]]}]]}],["$","$Lc",null,{"content":"$d"}],["$","div",null,{"className":"mt-12 pt-8 border-t border-gray-200 dark:border-gray-800","children":[["$","h2",null,{"className":"text-2xl font-bold mb-4","children":"Share this post"}],["$","div",null,{"className":"flex space-x-4","children":[["$","a",null,{"href":"https://twitter.com/intent/tweet?text=You%E2%80%99re%20Doing%20Validation%20Wrong%20in%20.NET&url=https%3A%2F%2Fdotnetevangelist.com%2Fblog%2Fyou-are-doing-validation-wrong-in-net-code","target":"_blank","rel":"noopener noreferrer","className":"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded flex items-center","children":"Twitter"}],["$","a",null,{"href":"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fdotnetevangelist.com%2Fblog%2Fyou-are-doing-validation-wrong-in-net-code","target":"_blank","rel":"noopener noreferrer","className":"bg-blue-800 hover:bg-blue-900 text-white px-4 py-2 rounded flex items-center","children":"Facebook"}],["$","a",null,{"href":"https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fdotnetevangelist.com%2Fblog%2Fyou-are-doing-validation-wrong-in-net-code","target":"_blank","rel":"noopener noreferrer","className":"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded flex items-center","children":"LinkedIn"}]]}]]}],["$","div",null,{"className":"mt-16 pt-8 border-t border-gray-200 dark:border-gray-800","children":[["$","h2",null,{"className":"text-2xl font-bold mb-4","children":"Related Articles"}],["$","div",null,{"className":"grid grid-cols-1 md:grid-cols-2 gap-6","children":[["$","div",null,{"className":"border border-gray-200 dark:border-gray-800 rounded-lg overflow-hidden shadow-sm hover:shadow-md transition-shadow","children":[["$","div",null,{"className":"aspect-video relative overflow-hidden","children":["$","$Le",null,{"src":"https://ik.imagekit.io/quadrate/assets/img/dotnetevangelist/maui-blazor-ai.png?updatedAt=1746906590698","alt":"Crafting Cross-Platform .NET MAUI Experiences with Blazor Hybrid & AI","fill":true,"sizes":"(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw","className":"object-cover","priority":false}]}],["$","div",null,{"className":"p-4","children":[["$","div",null,{"className":"flex items-center text-sm text-gray-500 dark:text-gray-400 mb-2","children":[["$","span",null,{"children":"May 10, 2025"}],["$","span",null,{"className":"mx-2","children":"â¢"}],["$","span",null,{"children":["6"," min read"]}]]}],["$","h2",null,{"className":"text-xl font-semibold mb-2","children":["$","$L7",null,{"href":"/blog/crafting-cross-platform-dotnet-maui-experiences-with-blazor-hybrid-and-ai","className":"hover:text-blue-600 dark:hover:text-blue-400","children":"Crafting Cross-Platform .NET MAUI Experiences with Blazor Hybrid & AI"}]}],["$","p",null,{"className":"text-gray-600 dark:text-gray-300 mb-4 line-clamp-3","children":"Learn how to build sophisticated cross-platform UIs with .NET MAUI and Blazor Hybrid, then integrate AI capabilities to create intelligent user experiences using a shared C# codebase."}],["$","div",null,{"className":"flex flex-wrap gap-2","children":[["$","$L7","Maui",{"href":"/tags/Maui","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Maui"]}],["$","$L7","Blazor Hybrid",{"href":"/tags/Blazor Hybrid","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Blazor Hybrid"]}],["$","$L7","Ai",{"href":"/tags/Ai","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Ai"]}],["$","$L7","Cross-platform",{"href":"/tags/Cross-platform","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Cross-platform"]}],["$","$L7","C#",{"href":"/tags/C#","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","C#"]}],["$","$L7",".Net",{"href":"/tags/.Net","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#",".Net"]}],["$","$L7","Ml.net",{"href":"/tags/Ml.net","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Ml.net"]}],["$","$L7","Mobile Development",{"href":"/tags/Mobile Development","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Mobile Development"]}]]}]]}]]}],["$","div",null,{"className":"border border-gray-200 dark:border-gray-800 rounded-lg overflow-hidden shadow-sm hover:shadow-md transition-shadow","children":[["$","div",null,{"className":"aspect-video relative overflow-hidden","children":["$","$Le",null,{"src":"https://ik.imagekit.io/quadrate/assets/img/dotnetevangelist/Difference_Between_Parallel_ForEach_and_Parallel_ForEachAsync.jpg?updatedAt=1746813307736","alt":"Difference Between Parallel.ForEach and Parallel.ForEachAsync in C#","fill":true,"sizes":"(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw","className":"object-cover","priority":false}]}],["$","div",null,{"className":"p-4","children":[["$","div",null,{"className":"flex items-center text-sm text-gray-500 dark:text-gray-400 mb-2","children":[["$","span",null,{"children":"Dec 8, 2024"}],["$","span",null,{"className":"mx-2","children":"â¢"}],["$","span",null,{"children":["5"," min read"]}]]}],["$","h2",null,{"className":"text-xl font-semibold mb-2","children":["$","$L7",null,{"href":"/blog/difference-between-parallel-foreach-and-parallel-foreachasync-in-csharp","className":"hover:text-blue-600 dark:hover:text-blue-400","children":"Difference Between Parallel.ForEach and Parallel.ForEachAsync in C#"}]}],["$","p",null,{"className":"text-gray-600 dark:text-gray-300 mb-4 line-clamp-3","children":"An in-depth comparison of Parallel.ForEach and Parallel.ForEachAsync in C# for efficient parallel processing."}],["$","div",null,{"className":"flex flex-wrap gap-2","children":[["$","$L7","C#",{"href":"/tags/C#","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","C#"]}],["$","$L7","Parallel Programming",{"href":"/tags/Parallel Programming","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Parallel Programming"]}],["$","$L7","Asynchronous",{"href":"/tags/Asynchronous","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Asynchronous"]}],["$","$L7","Programming",{"href":"/tags/Programming","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Programming"]}]]}]]}]]}]]}]]}]]}]
b:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Youâre Doing Validation Wrong in .NET | .NET Evangelist"}],["$","meta","3",{"name":"description","content":"Explore common mistakes and improved practices for validation in .NET applications."}],["$","meta","4",{"property":"og:title","content":"Youâre Doing Validation Wrong in .NET"}],["$","meta","5",{"property":"og:description","content":"Explore common mistakes and improved practices for validation in .NET applications."}],["$","meta","6",{"property":"og:image","content":"https://ik.imagekit.io/quadrate/assets/img/dotnetevangelist/image.png?updatedAt=1746822319204"}],["$","meta","7",{"property":"og:type","content":"article"}],["$","meta","8",{"property":"article:published_time","content":"2024-10-18"}],["$","meta","9",{"property":"article:author","content":"Your Name"}],["$","meta","10",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","11",{"name":"twitter:title","content":"Youâre Doing Validation Wrong in .NET"}],["$","meta","12",{"name":"twitter:description","content":"Explore common mistakes and improved practices for validation in .NET applications."}],["$","meta","13",{"name":"twitter:image","content":"https://ik.imagekit.io/quadrate/assets/img/dotnetevangelist/image.png?updatedAt=1746822319204"}],["$","link","14",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}],["$","meta","15",{"name":"next-size-adjust"}]]
1:null
