3:I[8369,[],""]
5:I[7206,[],""]
6:I[6124,["1893","static/chunks/1893-82c44e1e1ff4f13a.js","3185","static/chunks/app/layout-10e948e6073f84a8.js"],"ThemeProvider"]
7:I[1893,["1893","static/chunks/1893-82c44e1e1ff4f13a.js","231","static/chunks/231-b72d69e4329a1be1.js","308","static/chunks/app/blog/%5Bslug%5D/page-d7c48434154c3f65.js"],""]
8:I[6159,["1893","static/chunks/1893-82c44e1e1ff4f13a.js","231","static/chunks/231-b72d69e4329a1be1.js","1931","static/chunks/app/page-88df9313d37b14f9.js"],"HeaderSearch"]
9:I[5727,["1893","static/chunks/1893-82c44e1e1ff4f13a.js","3185","static/chunks/app/layout-10e948e6073f84a8.js"],"MobileMenu"]
a:I[94,["1893","static/chunks/1893-82c44e1e1ff4f13a.js","3185","static/chunks/app/layout-10e948e6073f84a8.js"],"ThemeToggle"]
4:["slug","implementing-the-repository-pattern-in-dot-net-a-game-changer-for-clean-code","d"]
0:["GpO592H_LkmWyA7BodWZx",[[["",{"children":["blog",{"children":[["slug","implementing-the-repository-pattern-in-dot-net-a-game-changer-for-clean-code","d"],{"children":["__PAGE__?{\"slug\":\"implementing-the-repository-pattern-in-dot-net-a-game-changer-for-clean-code\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["blog",{"children":[["slug","implementing-the-repository-pattern-in-dot-net-a-game-changer-for-clean-code","d"],{"children":["__PAGE__",{},[["$L1","$L2",null],null],null]},[null,["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[null,["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/0b32324c4996f85d.css","precedence":"next","crossOrigin":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"className":"__variable_d65c78 __variable_5899e0 antialiased min-h-screen flex flex-col","children":["$","$L6",null,{"children":[["$","header",null,{"className":"bg-white dark:bg-gray-900 shadow-md","children":["$","div",null,{"className":"container mx-auto px-4 py-3 flex justify-between items-center","children":[["$","$L7",null,{"href":"/","className":"flex items-center hover:opacity-90 transition-opacity","children":["$","div",null,{"className":"flex items-center","children":[["$","div",null,{"className":"relative h-12 w-16 md:h-14 md:w-20","children":["$","img",null,{"src":"https://ik.imagekit.io/quadrate/assets/img/dotnetevangelist/dotnetlogo.png?updatedAt=1746982028912","alt":".NET Logo","className":"object-contain h-full w-full"}]}],["$","span",null,{"className":"text-xl md:text-2xl font-bold bg-gradient-to-r from-blue-500 to-cyan-400 text-transparent bg-clip-text ml-1","children":"Evangelist"}]]}]}],["$","div",null,{"className":"flex-1 mx-6 max-w-md hidden md:block","children":["$","$L8",null,{}]}],["$","div",null,{"className":"flex items-center space-x-6","children":[["$","nav",null,{"className":"hidden md:block","children":["$","ul",null,{"className":"flex space-x-8","children":[["$","li",null,{"children":["$","$L7",null,{"href":"/","className":"text-gray-800 dark:text-gray-200 font-medium hover:text-blue-600 dark:hover:text-blue-400 py-2 transition-colors relative group","children":["Home",["$","span",null,{"className":"absolute bottom-0 left-0 w-0 h-0.5 bg-blue-600 dark:bg-blue-400 group-hover:w-full transition-all duration-300"}]]}]}],["$","li",null,{"children":["$","$L7",null,{"href":"/blog","className":"text-gray-800 dark:text-gray-200 font-medium hover:text-blue-600 dark:hover:text-blue-400 py-2 transition-colors relative group","children":["Blogs",["$","span",null,{"className":"absolute bottom-0 left-0 w-0 h-0.5 bg-blue-600 dark:bg-blue-400 group-hover:w-full transition-all duration-300"}]]}]}],["$","li",null,{"children":["$","$L7",null,{"href":"/about","className":"text-gray-800 dark:text-gray-200 font-medium hover:text-blue-600 dark:hover:text-blue-400 py-2 transition-colors relative group","children":["About",["$","span",null,{"className":"absolute bottom-0 left-0 w-0 h-0.5 bg-blue-600 dark:bg-blue-400 group-hover:w-full transition-all duration-300"}]]}]}]]}]}],["$","$L9",null,{}],["$","$La",null,{}]]}]]}]}],["$","main",null,{"className":"flex-grow","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"container mx-auto px-4 py-16 text-center","children":[["$","h1",null,{"className":"text-4xl font-bold mb-4","children":"404 - Page Not Found"}],["$","p",null,{"className":"text-xl text-gray-600 dark:text-gray-300 mb-8","children":"The page you are looking for does not exist."}],["$","div",null,{"className":"flex justify-center","children":["$","$L7",null,{"href":"/","className":"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded","data-cy":"home-link","children":"Return Home"}]}]]}],"notFoundStyles":[]}]}],["$","footer",null,{"className":"bg-white dark:bg-gray-900 py-8 mt-12 border-t border-gray-200 dark:border-gray-800","children":["$","div",null,{"className":"container mx-auto px-4","children":["$","div",null,{"className":"flex flex-col md:flex-row justify-between items-center","children":[["$","div",null,{"className":"mb-6 md:mb-0","children":[["$","$L7",null,{"href":"/","className":"flex items-center hover:opacity-90 transition-opacity mb-4","children":["$","div",null,{"className":"flex items-center","children":[["$","div",null,{"className":"relative h-10 w-14 md:h-12 md:w-16","children":["$","img",null,{"src":"https://ik.imagekit.io/quadrate/assets/img/dotnetevangelist/dotnetlogo.png?updatedAt=1746982028912","alt":".NET Logo","className":"object-contain h-full w-full"}]}],["$","span",null,{"className":"text-lg md:text-xl font-bold bg-gradient-to-r from-blue-500 to-cyan-400 text-transparent bg-clip-text ml-1","children":"Evangelist"}]]}]}],["$","p",null,{"className":"text-gray-600 dark:text-gray-300 mt-2","children":"Â© 2025 .NET Evangelist. All rights reserved."}]]}],["$","div",null,{"className":"grid grid-cols-2 gap-x-8 gap-y-4","children":[["$","div",null,{"children":[["$","h3",null,{"className":"text-sm font-semibold text-gray-800 dark:text-white uppercase tracking-wider mb-3","children":"Navigation"}],["$","ul",null,{"className":"space-y-2","children":[["$","li",null,{"children":["$","$L7",null,{"href":"/","className":"text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors font-medium","children":"Home"}]}],["$","li",null,{"children":["$","$L7",null,{"href":"/blog","className":"text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors font-medium","children":"Blogs"}]}],["$","li",null,{"children":["$","$L7",null,{"href":"/about","className":"text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors font-medium","children":"About"}]}]]}]]}],["$","div",null,{"children":[["$","h3",null,{"className":"text-sm font-semibold text-gray-800 dark:text-white uppercase tracking-wider mb-3","children":"Connect"}],["$","ul",null,{"className":"space-y-2","children":[["$","li",null,{"children":["$","a",null,{"href":"#","className":"text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors flex items-center font-medium","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","className":"h-4 w-4 mr-2","fill":"currentColor","viewBox":"0 0 24 24","children":["$","path",null,{"d":"M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z"}]}],"Twitter"]}]}],["$","li",null,{"children":["$","a",null,{"href":"#","className":"text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors flex items-center font-medium","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","className":"h-4 w-4 mr-2","fill":"currentColor","viewBox":"0 0 24 24","children":["$","path",null,{"d":"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"}]}],"GitHub"]}]}],["$","li",null,{"children":["$","a",null,{"href":"#","className":"text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors flex items-center font-medium","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","className":"h-4 w-4 mr-2","fill":"currentColor","viewBox":"0 0 24 24","children":["$","path",null,{"d":"M4.98 3.5c0 1.381-1.11 2.5-2.48 2.5s-2.48-1.119-2.48-2.5c0-1.38 1.11-2.5 2.48-2.5s2.48 1.12 2.48 2.5zm.02 4.5h-5v16h5v-16zm7.982 0h-4.968v16h4.969v-8.399c0-4.67 6.029-5.052 6.029 0v8.399h4.988v-10.131c0-7.88-8.922-7.593-11.018-3.714v-2.155z"}]}],"LinkedIn"]}]}]]}]]}]]}]]}]}]}]]}]}]}]],null],null],["$Lb",null]]]]
c:I[2364,["1893","static/chunks/1893-82c44e1e1ff4f13a.js","231","static/chunks/231-b72d69e4329a1be1.js","308","static/chunks/app/blog/%5Bslug%5D/page-d7c48434154c3f65.js"],"BlogContent"]
e:I[231,["1893","static/chunks/1893-82c44e1e1ff4f13a.js","231","static/chunks/231-b72d69e4329a1be1.js","308","static/chunks/app/blog/%5Bslug%5D/page-d7c48434154c3f65.js"],"Image"]
d:T2b59,{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    strong: \"strong\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\",\n    code: \"code\",\n    h3: \"h3\",\n    ol: \"ol\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"In software development, particularly with .NET, the repository pattern can be a transformative tool for managing complex codebases. It simplifies data access logic, keeps the code clean, and ensures better organization in larger applications. Let's dive into what a repository is, why it's beneficial, and how to use it in your .NET applications.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"What is a Repository?\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Think of a repository as a middleman between your application and the database. Instead of embedding database access code all over your application, you centralize it in a repository. This not only keeps your code more organized but also abstracts the details of data access, allowing you to focus on the business logic.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In this article, we'll implement a repository pattern to manage \", _jsx(_components.strong, {\n        children: \"CRUD\"\n      }), \" (Create, Read, Update, Delete) operations for a game character in a .NET application using \", _jsx(_components.strong, {\n        children: \"Entity Framework\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Setting Up the Project\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"We're using \", _jsx(_components.strong, {\n        children: \"ASP.NET Core Web API\"\n      }), \" with \", _jsx(_components.strong, {\n        children: \"Entity Framework Core\"\n      }), \" for this project. The project already includes:\"]\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"A \", _jsx(_components.strong, {\n          children: \"GameCharacter\"\n        }), \" entity representing a game character.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"A \", _jsx(_components.strong, {\n          children: \"GameContext\"\n        }), \" class for the Entity Framework Core database context.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"A \", _jsx(_components.strong, {\n          children: \"connection string\"\n        }), \" and \", _jsx(_components.strong, {\n          children: \"code-first migration\"\n        }), \" setup.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Now, let's organize the data access code with a repository pattern.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Step 1: Define the Repository Interface\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"We'll start by creating an interface that defines the repository's capabilities. This interface will act as a contract for any class implementing the repository.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-csharp\",\n        children: \"public interface IGameCharacterRepository\\n{\\n    List<GameCharacter> GetAllCharacters();\\n    GameCharacter GetCharacterById(int id);\\n    void AddCharacter(GameCharacter character);\\n    void UpdateCharacter(GameCharacter character);\\n    void DeleteCharacter(int id);\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Step 2: Implement the Repository\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Next, weâll create the \", _jsx(_components.code, {\n        children: \"GameCharacterRepository\"\n      }), \" class that implements the \", _jsx(_components.code, {\n        children: \"IGameCharacterRepository\"\n      }), \" interface. This class will handle data access via Entity Framework.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-csharp\",\n        children: \"\\npublic class GameCharacterRepository : IGameCharacterRepository\\n{\\n    private readonly GameContext _context;\\n\\n    public GameCharacterRepository(GameContext context)\\n    {\\n        _context = context;\\n    }\\n\\n    public List<GameCharacter> GetAllCharacters()\\n    {\\n        return _context.GameCharacters.ToList();\\n    }\\n\\n    public GameCharacter GetCharacterById(int id)\\n    {\\n        return _context.GameCharacters.Find(id);\\n    }\\n\\n    public void AddCharacter(GameCharacter character)\\n    {\\n        _context.GameCharacters.Add(character);\\n        _context.SaveChanges();\\n    }\\n\\n    public void UpdateCharacter(GameCharacter character)\\n    {\\n        var characterToUpdate = _context.GameCharacters\\n            .FirstOrDefault(c => c.Id == character.Id);\\n        if (characterToUpdate == null) return;\\n\\n        characterToUpdate.Name = character.Name;\\n        characterToUpdate.Health = character.Health;\\n        characterToUpdate.Level = character.Level;\\n        characterToUpdate.Weapon = character.Weapon;\\n\\n        _context.SaveChanges();\\n    }\\n\\n    public void DeleteCharacter(int id)\\n    {\\n        var character = _context.GameCharacters.Find(id);\\n        if (character == null) return;\\n\\n        _context.GameCharacters.Remove(character);\\n        _context.SaveChanges();\\n    }\\n}\\n\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Step 3: Use Dependency Injection\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In \", _jsx(_components.strong, {\n        children: \"ASP.NET Core\"\n      }), \", we can inject services like the \", _jsx(_components.code, {\n        children: \"GameCharacterRepository\"\n      }), \" into the controllers through \", _jsx(_components.strong, {\n        children: \"Dependency Injection\"\n      }), \". First, register the repository in \", _jsx(_components.code, {\n        children: \"Program.cs\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-csharp\",\n        children: \"\\nbuilder.Services.AddScoped<IGameCharacterRepository, GameCharacterRepository>();\\n\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This tells the application to inject the \", _jsx(_components.code, {\n        children: \"GameCharacterRepository\"\n      }), \" whenever \", _jsx(_components.code, {\n        children: \"IGameCharacterRepository\"\n      }), \" is required.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Step 4: Create the Controller\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"The final step is to use this repository in our controller. Letâs create an \", _jsx(_components.code, {\n        children: \"APIController\"\n      }), \" to handle requests related to game characters.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-csharp\",\n        children: \"\\n[ApiController]\\n[Route(\\\"api/[controller]\\\")]\\npublic class GameCharactersController : ControllerBase\\n{\\n    private readonly IGameCharacterRepository _repository;\\n\\n    public GameCharactersController(IGameCharacterRepository repository)\\n    {\\n        _repository = repository;\\n    }\\n\\n    [HttpGet]\\n    public IActionResult GetAllCharacters()\\n    {\\n        var characters = _repository.GetAllCharacters();\\n        return Ok(characters);\\n    }\\n\\n    [HttpGet(\\\"{id}\\\")]\\n    public IActionResult GetCharacterById(int id)\\n    {\\n        var character = _repository.GetCharacterById(id);\\n        if (character == null) return NotFound();\\n        return Ok(character);\\n    }\\n\\n    [HttpPost]\\n    public IActionResult AddCharacter(GameCharacter character)\\n    {\\n        _repository.AddCharacter(character);\\n        return CreatedAtAction(nameof(GetCharacterById), new { id = character.Id }, character);\\n    }\\n\\n    [HttpPut(\\\"{id}\\\")]\\n    public IActionResult UpdateCharacter(int id, GameCharacter character)\\n    {\\n        if (id != character.Id) return BadRequest();\\n        _repository.UpdateCharacter(character);\\n        return NoContent();\\n    }\\n\\n    [HttpDelete(\\\"{id}\\\")]\\n    public IActionResult DeleteCharacter(int id)\\n    {\\n        _repository.DeleteCharacter(id);\\n        return NoContent();\\n    }\\n}\\n\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Benefits of the Repository Pattern\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"By separating the data access logic into a repository, you enjoy several benefits:\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Cleaner Controllers:\"\n        }), \" Your controllers focus only on handling HTTP requests and responses.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Testability:\"\n        }), \" It becomes easier to mock repositories during testing.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Loose Coupling:\"\n        }), \" If you decide to switch databases or ORM tools, your controllers remain unaffected since the data access logic is encapsulated in repositories.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"The repository pattern is a powerful way to keep your .NET code organized, maintainable, and testable. By abstracting the data access layer, you allow your application to grow without becoming cluttered with database logic scattered throughout. Try implementing this in your next .NET project to see how it can improve code quality and scalability.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For more advanced topics like \", _jsx(_components.strong, {\n        children: \"Dependency Injection\"\n      }), \", \", _jsx(_components.strong, {\n        children: \"Entity Framework Code First Migrations\"\n      }), \", and \", _jsx(_components.strong, {\n        children: \"Unit Testing with Repositories\"\n      }), \", stay tuned!\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}2:["$","article",null,{"className":"container mx-auto px-4 py-8 max-w-4xl","children":[["$","div",null,{"className":"mb-8","children":[["$","div",null,{"className":"flex items-center text-sm text-gray-500 dark:text-gray-400 mb-4","children":[["$","span",null,{"children":"2024-10-12"}],["$","span",null,{"className":"mx-2","children":"â¢"}],["$","span",null,{"children":["4"," min read"]}]]}],["$","h1",null,{"className":"text-4xl font-bold mb-4","children":"Implementing the Repository Pattern in .NET: A Game-Changer for Clean Code"}],["$","p",null,{"className":"text-xl text-gray-600 dark:text-gray-300 mb-6","children":"Learn how to implement the repository pattern in .NET applications to simplify data access logic, improve code organization, and enhance maintainability."}],["$","div",null,{"className":"aspect-video relative overflow-hidden rounded-lg mb-8","children":["$","img",null,{"src":"https://ik.imagekit.io/quadrate/assets/img/dotnetevangelist/Implementing-the-Repository-Pattern-in-NET-A-Game-Changer-for-Clean-Code.jpg?updatedAt=1746813308058","alt":"Implementing the Repository Pattern in .NET: A Game-Changer for Clean Code","className":"object-cover w-full h-full"}]}],["$","div",null,{"className":"flex flex-wrap gap-2 mb-8","children":[["$","$L7",".Net",{"href":"/tags/.Net","className":"text-sm bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 px-3 py-1 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700","children":["#",".Net"]}],["$","$L7","C#",{"href":"/tags/C#","className":"text-sm bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 px-3 py-1 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","C#"]}],["$","$L7","Design Patterns",{"href":"/tags/Design Patterns","className":"text-sm bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 px-3 py-1 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Design Patterns"]}],["$","$L7","Clean Code",{"href":"/tags/Clean Code","className":"text-sm bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 px-3 py-1 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Clean Code"]}]]}]]}],["$","$Lc",null,{"content":"$d"}],["$","div",null,{"className":"mt-12 pt-8 border-t border-gray-200 dark:border-gray-800","children":[["$","h2",null,{"className":"text-2xl font-bold mb-4","children":"Share this post"}],["$","div",null,{"className":"flex space-x-4","children":[["$","a",null,{"href":"https://twitter.com/intent/tweet?text=Implementing%20the%20Repository%20Pattern%20in%20.NET%3A%20A%20Game-Changer%20for%20Clean%20Code&url=https%3A%2F%2Fdotnetevangelist.com%2Fblog%2Fimplementing-the-repository-pattern-in-dot-net-a-game-changer-for-clean-code","target":"_blank","rel":"noopener noreferrer","className":"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded flex items-center","children":"Twitter"}],["$","a",null,{"href":"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fdotnetevangelist.com%2Fblog%2Fimplementing-the-repository-pattern-in-dot-net-a-game-changer-for-clean-code","target":"_blank","rel":"noopener noreferrer","className":"bg-blue-800 hover:bg-blue-900 text-white px-4 py-2 rounded flex items-center","children":"Facebook"}],["$","a",null,{"href":"https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fdotnetevangelist.com%2Fblog%2Fimplementing-the-repository-pattern-in-dot-net-a-game-changer-for-clean-code","target":"_blank","rel":"noopener noreferrer","className":"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded flex items-center","children":"LinkedIn"}]]}]]}],["$","div",null,{"className":"mt-16 pt-8 border-t border-gray-200 dark:border-gray-800","children":[["$","h2",null,{"className":"text-2xl font-bold mb-4","children":"Related Articles"}],["$","div",null,{"className":"grid grid-cols-1 md:grid-cols-2 gap-6","children":[["$","div",null,{"className":"border border-gray-200 dark:border-gray-800 rounded-lg overflow-hidden shadow-sm hover:shadow-md transition-shadow","children":[["$","div",null,{"className":"aspect-video relative overflow-hidden","children":["$","$Le",null,{"src":"https://ik.imagekit.io/quadrate/assets/img/dotnetevangelist/maui-blazor-ai.png?updatedAt=1746906590698","alt":"Crafting Cross-Platform .NET MAUI Experiences with Blazor Hybrid & AI","fill":true,"sizes":"(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw","className":"object-cover","priority":false}]}],["$","div",null,{"className":"p-4","children":[["$","div",null,{"className":"flex items-center text-sm text-gray-500 dark:text-gray-400 mb-2","children":[["$","span",null,{"children":"May 10, 2025"}],["$","span",null,{"className":"mx-2","children":"â¢"}],["$","span",null,{"children":["6"," min read"]}]]}],["$","h2",null,{"className":"text-xl font-semibold mb-2","children":["$","$L7",null,{"href":"/blog/crafting-cross-platform-dotnet-maui-experiences-with-blazor-hybrid-and-ai","className":"hover:text-blue-600 dark:hover:text-blue-400","children":"Crafting Cross-Platform .NET MAUI Experiences with Blazor Hybrid & AI"}]}],["$","p",null,{"className":"text-gray-600 dark:text-gray-300 mb-4 line-clamp-3","children":"Learn how to build sophisticated cross-platform UIs with .NET MAUI and Blazor Hybrid, then integrate AI capabilities to create intelligent user experiences using a shared C# codebase."}],["$","div",null,{"className":"flex flex-wrap gap-2","children":[["$","$L7","Maui",{"href":"/tags/Maui","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Maui"]}],["$","$L7","Blazor Hybrid",{"href":"/tags/Blazor Hybrid","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Blazor Hybrid"]}],["$","$L7","Ai",{"href":"/tags/Ai","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Ai"]}],["$","$L7","Cross-platform",{"href":"/tags/Cross-platform","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Cross-platform"]}],["$","$L7","C#",{"href":"/tags/C#","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","C#"]}],["$","$L7",".Net",{"href":"/tags/.Net","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#",".Net"]}],["$","$L7","Ml.net",{"href":"/tags/Ml.net","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Ml.net"]}],["$","$L7","Mobile Development",{"href":"/tags/Mobile Development","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Mobile Development"]}]]}]]}]]}],["$","div",null,{"className":"border border-gray-200 dark:border-gray-800 rounded-lg overflow-hidden shadow-sm hover:shadow-md transition-shadow","children":[["$","div",null,{"className":"aspect-video relative overflow-hidden","children":["$","$Le",null,{"src":"https://ik.imagekit.io/quadrate/assets/img/dotnetevangelist/blazor-modern-ui-2025.png?updatedAt=1746813295064","alt":"Modern Web UIs with Blazor in 2025: State Management & Component Libraries","fill":true,"sizes":"(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw","className":"object-cover","priority":false}]}],["$","div",null,{"className":"p-4","children":[["$","div",null,{"className":"flex items-center text-sm text-gray-500 dark:text-gray-400 mb-2","children":[["$","span",null,{"children":"Apr 6, 2025"}],["$","span",null,{"className":"mx-2","children":"â¢"}],["$","span",null,{"children":["21"," min read"]}]]}],["$","h2",null,{"className":"text-xl font-semibold mb-2","children":["$","$L7",null,{"href":"/blog/building-modern-web-ui-with-blazor-in-2025","className":"hover:text-blue-600 dark:hover:text-blue-400","children":"Modern Web UIs with Blazor in 2025: State Management & Component Libraries"}]}],["$","p",null,{"className":"text-gray-600 dark:text-gray-300 mb-4 line-clamp-3","children":"Explore the latest advancements in Blazor development for 2025, focusing on state management, popular component libraries like MudBlazor and Radzen, and key performance optimization techniques."}],["$","div",null,{"className":"flex flex-wrap gap-2","children":[["$","$L7","Blazor",{"href":"/tags/Blazor","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Blazor"]}],["$","$L7",".Net",{"href":"/tags/.Net","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#",".Net"]}],["$","$L7","Web Development",{"href":"/tags/Web Development","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Web Development"]}],["$","$L7","Ui",{"href":"/tags/Ui","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Ui"]}],["$","$L7","State Management",{"href":"/tags/State Management","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","State Management"]}],["$","$L7","Mudblazor",{"href":"/tags/Mudblazor","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Mudblazor"]}],["$","$L7","Radzen",{"href":"/tags/Radzen","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Radzen"]}],["$","$L7","Performance",{"href":"/tags/Performance","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Performance"]}],["$","$L7","Asp.net Core",{"href":"/tags/Asp.net Core","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Asp.net Core"]}]]}]]}]]}]]}]]}]]}]
b:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Implementing the Repository Pattern in .NET: A Game-Changer for Clean Code | .NET Evangelist"}],["$","meta","3",{"name":"description","content":"Learn how to implement the repository pattern in .NET applications to simplify data access logic, improve code organization, and enhance maintainability."}],["$","meta","4",{"property":"og:title","content":"Implementing the Repository Pattern in .NET: A Game-Changer for Clean Code"}],["$","meta","5",{"property":"og:description","content":"Learn how to implement the repository pattern in .NET applications to simplify data access logic, improve code organization, and enhance maintainability."}],["$","meta","6",{"property":"og:image","content":"https://ik.imagekit.io/quadrate/assets/img/dotnetevangelist/Implementing-the-Repository-Pattern-in-NET-A-Game-Changer-for-Clean-Code.jpg?updatedAt=1746813308058"}],["$","meta","7",{"property":"og:type","content":"article"}],["$","meta","8",{"property":"article:published_time","content":"2024-10-12"}],["$","meta","9",{"property":"article:author","content":"Your Name"}],["$","meta","10",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","11",{"name":"twitter:title","content":"Implementing the Repository Pattern in .NET: A Game-Changer for Clean Code"}],["$","meta","12",{"name":"twitter:description","content":"Learn how to implement the repository pattern in .NET applications to simplify data access logic, improve code organization, and enhance maintainability."}],["$","meta","13",{"name":"twitter:image","content":"https://ik.imagekit.io/quadrate/assets/img/dotnetevangelist/Implementing-the-Repository-Pattern-in-NET-A-Game-Changer-for-Clean-Code.jpg?updatedAt=1746813308058"}],["$","link","14",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}],["$","meta","15",{"name":"next-size-adjust"}]]
1:null
