3:I[8369,[],""]
5:I[7206,[],""]
6:I[6124,["1893","static/chunks/1893-82c44e1e1ff4f13a.js","3185","static/chunks/app/layout-10e948e6073f84a8.js"],"ThemeProvider"]
7:I[1893,["1893","static/chunks/1893-82c44e1e1ff4f13a.js","231","static/chunks/231-b72d69e4329a1be1.js","308","static/chunks/app/blog/%5Bslug%5D/page-d7c48434154c3f65.js"],""]
8:I[6159,["1893","static/chunks/1893-82c44e1e1ff4f13a.js","231","static/chunks/231-b72d69e4329a1be1.js","1931","static/chunks/app/page-88df9313d37b14f9.js"],"HeaderSearch"]
9:I[5727,["1893","static/chunks/1893-82c44e1e1ff4f13a.js","3185","static/chunks/app/layout-10e948e6073f84a8.js"],"MobileMenu"]
a:I[94,["1893","static/chunks/1893-82c44e1e1ff4f13a.js","3185","static/chunks/app/layout-10e948e6073f84a8.js"],"ThemeToggle"]
4:["slug","how-to-use-redis-caching-with-aspnet-core-and-net-8","d"]
0:["GpO592H_LkmWyA7BodWZx",[[["",{"children":["blog",{"children":[["slug","how-to-use-redis-caching-with-aspnet-core-and-net-8","d"],{"children":["__PAGE__?{\"slug\":\"how-to-use-redis-caching-with-aspnet-core-and-net-8\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["blog",{"children":[["slug","how-to-use-redis-caching-with-aspnet-core-and-net-8","d"],{"children":["__PAGE__",{},[["$L1","$L2",null],null],null]},[null,["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[null,["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/0b32324c4996f85d.css","precedence":"next","crossOrigin":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"className":"__variable_d65c78 __variable_5899e0 antialiased min-h-screen flex flex-col","children":["$","$L6",null,{"children":[["$","header",null,{"className":"bg-white dark:bg-gray-900 shadow-md","children":["$","div",null,{"className":"container mx-auto px-4 py-3 flex justify-between items-center","children":[["$","$L7",null,{"href":"/","className":"flex items-center hover:opacity-90 transition-opacity","children":["$","div",null,{"className":"flex items-center","children":[["$","div",null,{"className":"relative h-12 w-16 md:h-14 md:w-20","children":["$","img",null,{"src":"https://ik.imagekit.io/quadrate/assets/img/dotnetevangelist/dotnetlogo.png?updatedAt=1746982028912","alt":".NET Logo","className":"object-contain h-full w-full"}]}],["$","span",null,{"className":"text-xl md:text-2xl font-bold bg-gradient-to-r from-blue-500 to-cyan-400 text-transparent bg-clip-text ml-1","children":"Evangelist"}]]}]}],["$","div",null,{"className":"flex-1 mx-6 max-w-md hidden md:block","children":["$","$L8",null,{}]}],["$","div",null,{"className":"flex items-center space-x-6","children":[["$","nav",null,{"className":"hidden md:block","children":["$","ul",null,{"className":"flex space-x-8","children":[["$","li",null,{"children":["$","$L7",null,{"href":"/","className":"text-gray-800 dark:text-gray-200 font-medium hover:text-blue-600 dark:hover:text-blue-400 py-2 transition-colors relative group","children":["Home",["$","span",null,{"className":"absolute bottom-0 left-0 w-0 h-0.5 bg-blue-600 dark:bg-blue-400 group-hover:w-full transition-all duration-300"}]]}]}],["$","li",null,{"children":["$","$L7",null,{"href":"/blog","className":"text-gray-800 dark:text-gray-200 font-medium hover:text-blue-600 dark:hover:text-blue-400 py-2 transition-colors relative group","children":["Blogs",["$","span",null,{"className":"absolute bottom-0 left-0 w-0 h-0.5 bg-blue-600 dark:bg-blue-400 group-hover:w-full transition-all duration-300"}]]}]}],["$","li",null,{"children":["$","$L7",null,{"href":"/about","className":"text-gray-800 dark:text-gray-200 font-medium hover:text-blue-600 dark:hover:text-blue-400 py-2 transition-colors relative group","children":["About",["$","span",null,{"className":"absolute bottom-0 left-0 w-0 h-0.5 bg-blue-600 dark:bg-blue-400 group-hover:w-full transition-all duration-300"}]]}]}]]}]}],["$","$L9",null,{}],["$","$La",null,{}]]}]]}]}],["$","main",null,{"className":"flex-grow","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"container mx-auto px-4 py-16 text-center","children":[["$","h1",null,{"className":"text-4xl font-bold mb-4","children":"404 - Page Not Found"}],["$","p",null,{"className":"text-xl text-gray-600 dark:text-gray-300 mb-8","children":"The page you are looking for does not exist."}],["$","div",null,{"className":"flex justify-center","children":["$","$L7",null,{"href":"/","className":"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded","data-cy":"home-link","children":"Return Home"}]}]]}],"notFoundStyles":[]}]}],["$","footer",null,{"className":"bg-white dark:bg-gray-900 py-8 mt-12 border-t border-gray-200 dark:border-gray-800","children":["$","div",null,{"className":"container mx-auto px-4","children":["$","div",null,{"className":"flex flex-col md:flex-row justify-between items-center","children":[["$","div",null,{"className":"mb-6 md:mb-0","children":[["$","$L7",null,{"href":"/","className":"flex items-center hover:opacity-90 transition-opacity mb-4","children":["$","div",null,{"className":"flex items-center","children":[["$","div",null,{"className":"relative h-10 w-14 md:h-12 md:w-16","children":["$","img",null,{"src":"https://ik.imagekit.io/quadrate/assets/img/dotnetevangelist/dotnetlogo.png?updatedAt=1746982028912","alt":".NET Logo","className":"object-contain h-full w-full"}]}],["$","span",null,{"className":"text-lg md:text-xl font-bold bg-gradient-to-r from-blue-500 to-cyan-400 text-transparent bg-clip-text ml-1","children":"Evangelist"}]]}]}],["$","p",null,{"className":"text-gray-600 dark:text-gray-300 mt-2","children":"Â© 2025 .NET Evangelist. All rights reserved."}]]}],["$","div",null,{"className":"grid grid-cols-2 gap-x-8 gap-y-4","children":[["$","div",null,{"children":[["$","h3",null,{"className":"text-sm font-semibold text-gray-800 dark:text-white uppercase tracking-wider mb-3","children":"Navigation"}],["$","ul",null,{"className":"space-y-2","children":[["$","li",null,{"children":["$","$L7",null,{"href":"/","className":"text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors font-medium","children":"Home"}]}],["$","li",null,{"children":["$","$L7",null,{"href":"/blog","className":"text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors font-medium","children":"Blogs"}]}],["$","li",null,{"children":["$","$L7",null,{"href":"/about","className":"text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors font-medium","children":"About"}]}]]}]]}],["$","div",null,{"children":[["$","h3",null,{"className":"text-sm font-semibold text-gray-800 dark:text-white uppercase tracking-wider mb-3","children":"Connect"}],["$","ul",null,{"className":"space-y-2","children":[["$","li",null,{"children":["$","a",null,{"href":"#","className":"text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors flex items-center font-medium","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","className":"h-4 w-4 mr-2","fill":"currentColor","viewBox":"0 0 24 24","children":["$","path",null,{"d":"M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z"}]}],"Twitter"]}]}],["$","li",null,{"children":["$","a",null,{"href":"#","className":"text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors flex items-center font-medium","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","className":"h-4 w-4 mr-2","fill":"currentColor","viewBox":"0 0 24 24","children":["$","path",null,{"d":"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"}]}],"GitHub"]}]}],["$","li",null,{"children":["$","a",null,{"href":"#","className":"text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors flex items-center font-medium","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","className":"h-4 w-4 mr-2","fill":"currentColor","viewBox":"0 0 24 24","children":["$","path",null,{"d":"M4.98 3.5c0 1.381-1.11 2.5-2.48 2.5s-2.48-1.119-2.48-2.5c0-1.38 1.11-2.5 2.48-2.5s2.48 1.12 2.48 2.5zm.02 4.5h-5v16h5v-16zm7.982 0h-4.968v16h4.969v-8.399c0-4.67 6.029-5.052 6.029 0v8.399h4.988v-10.131c0-7.88-8.922-7.593-11.018-3.714v-2.155z"}]}],"LinkedIn"]}]}]]}]]}]]}]]}]}]}]]}]}]}]],null],null],["$Lb",null]]]]
c:I[2364,["1893","static/chunks/1893-82c44e1e1ff4f13a.js","231","static/chunks/231-b72d69e4329a1be1.js","308","static/chunks/app/blog/%5Bslug%5D/page-d7c48434154c3f65.js"],"BlogContent"]
e:I[231,["1893","static/chunks/1893-82c44e1e1ff4f13a.js","231","static/chunks/231-b72d69e4329a1be1.js","308","static/chunks/app/blog/%5Bslug%5D/page-d7c48434154c3f65.js"],"Image"]
d:T3990,{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    strong: \"strong\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    ol: \"ol\",\n    h3: \"h3\",\n    pre: \"pre\",\n    code: \"code\",\n    a: \"a\",\n    hr: \"hr\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Caching is a crucial aspect of web application development. It can help reduce the load on the database, speed up application performance, and improve scalability. Redis, an open-source, in-memory data structure store, is a popular choice for caching in ASP.NET Core applications. In this article, we will explore the steps involved in implementing Redis caching with ASP.NET Core and .NET 8.\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Prerequisites\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"To follow along with this article, you should have the following:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \".NET 8 SDK installed on your machine\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Visual Studio 2022 (version 17.8 or later), Visual Studio Code, or JetBrains Rider\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Redis server installed locally or access to a remote Redis server\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Creating a New ASP.NET Core Application\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Let's start by creating a new ASP.NET Core application:\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Open your preferred IDE (Visual Studio, VS Code, or Rider).\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Create a new ASP.NET Core Web API project.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Select \\\".NET 8.0\\\" as the target framework.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Choose a project name and location, then create the project.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Adding Redis Cache\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"To use Redis caching in your ASP.NET Core application, you need to add the Redis cache provider to your project.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Add the Redis cache provider:\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Run the following command in the terminal or Package Manager Console:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"dotnet add package Microsoft.Extensions.Caching.StackExchangeRedis\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Configuring Redis Cache\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Once you've added the Redis cache provider, configure it in the \", _jsx(_components.code, {\n        children: \"Program.cs\"\n      }), \" file:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-csharp\",\n        children: \"using Microsoft.Extensions.Caching.StackExchangeRedis;\\n\\nvar builder = WebApplication.CreateBuilder(args);\\n\\n// Add Redis cache\\nbuilder.Services.AddStackExchangeRedisCache(options =>\\n{\\n    options.Configuration = builder.Configuration.GetConnectionString(\\\"Redis\\\");\\n    options.InstanceName = \\\"SampleInstance\\\";\\n});\\n\\n// Other service registrations...\\n\\nvar app = builder.Build();\\n\\n// Configure the HTTP request pipeline\\nif (app.Environment.IsDevelopment())\\n{\\n    app.UseSwagger();\\n    app.UseSwaggerUI();\\n}\\n\\napp.UseHttpsRedirection();\\napp.UseAuthorization();\\napp.MapControllers();\\n\\n// Use Redis cache middleware\\napp.UseResponseCaching();\\n\\napp.Run();\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In this code, we're adding the Redis cache provider to the \", _jsx(_components.code, {\n        children: \"IServiceCollection\"\n      }), \" and configuring it with the Redis server address from the configuration. We're also adding the Redis cache middleware to the application pipeline using the \", _jsx(_components.code, {\n        children: \"UseResponseCaching\"\n      }), \" method.\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Make sure to add the Redis connection string to your \", _jsx(_components.code, {\n        children: \"appsettings.json\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-json\",\n        children: \"{\\n  \\\"ConnectionStrings\\\": {\\n    \\\"Redis\\\": \\\"localhost:6379\\\"\\n  },\\n  // Other settings...\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Using Redis Cache\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Now that Redis cache is configured, you can use it in your application to cache data. You can do this by injecting the \", _jsx(_components.code, {\n        children: \"IDistributedCache\"\n      }), \" interface into your controllers or services and using it to read from or write to the cache.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Example: Caching Product Data\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Here's an example of how to use Redis cache to cache a list of products:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-csharp\",\n        children: \"using System.Text.Json;\\nusing Microsoft.Extensions.Caching.Distributed;\\n\\npublic class ProductService\\n{\\n    private readonly IDistributedCache _cache;\\n    private readonly ApplicationDbContext _dbContext;\\n\\n    public ProductService(IDistributedCache cache, ApplicationDbContext dbContext)\\n    {\\n        _cache = cache;\\n        _dbContext = dbContext;\\n    }\\n\\n    public async Task<List<Product>> GetProductsAsync()\\n    {\\n        var cacheKey = \\\"ProductList\\\";\\n        var cachedProducts = await _cache.GetStringAsync(cacheKey);\\n\\n        if (cachedProducts != null)\\n        {\\n            return JsonSerializer.Deserialize<List<Product>>(cachedProducts);\\n        }\\n\\n        var products = await _dbContext.Products.ToListAsync();\\n        var serializedProducts = JsonSerializer.Serialize(products);\\n        var cacheOptions = new DistributedCacheEntryOptions\\n        {\\n            AbsoluteExpirationRelativeToNow = TimeSpan.FromMinutes(30),\\n            SlidingExpiration = TimeSpan.FromMinutes(10)\\n        };\\n\\n        await _cache.SetStringAsync(cacheKey, serializedProducts, cacheOptions);\\n\\n        return products;\\n    }\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"In this code, we're injecting \", _jsx(_components.code, {\n        children: \"IDistributedCache\"\n      }), \" into our \", _jsx(_components.code, {\n        children: \"ProductService\"\n      }), \" class and using it to cache a list of products. We're using the \", _jsx(_components.code, {\n        children: \"SetStringAsync\"\n      }), \" method to write the list of products to the cache and the \", _jsx(_components.code, {\n        children: \"GetStringAsync\"\n      }), \" method to read the list of products from the cache.\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Advanced Redis Caching Techniques\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"1. Cache Serialization\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"For better performance, consider using a more efficient serialization method like Protocol Buffers or MessagePack instead of JSON:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-csharp\",\n        children: \"using MessagePack;\\n\\n// Serialization\\nvar serializedProducts = MessagePackSerializer.Serialize(products);\\n\\n// Deserialization\\nvar deserializedProducts = MessagePackSerializer.Deserialize<List<Product>>(cachedData);\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"2. Distributed Locking\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When multiple instances of your application are running, implement distributed locking to prevent race conditions:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-csharp\",\n        children: \"using StackExchange.Redis;\\n\\npublic async Task<List<Product>> GetProductsAsync()\\n{\\n    var cacheKey = \\\"ProductList\\\";\\n    var lockKey = `${cacheKey}_lock`;\\n\\n    using (var redisLock = await _distributedLockFactory.CreateLockAsync(lockKey, TimeSpan.FromSeconds(10)))\\n    {\\n        if (await redisLock.AcquireAsync())\\n        {\\n            try\\n            {\\n                // Check cache and update if necessary\\n                // ...\\n            }\\n            finally\\n            {\\n                await redisLock.ReleaseAsync();\\n            }\\n        }\\n        else\\n        {\\n            // Wait and retry or handle unable to acquire lock\\n        }\\n    }\\n\\n    // Return cached or fetched data\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"3. Cache Invalidation Strategies\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Implement cache invalidation strategies to ensure data consistency:\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Time-based expiration\"\n        }), \": Already implemented in the example above.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Event-based invalidation\"\n        }), \": Invalidate cache when data changes.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-csharp\",\n        children: \"public async Task UpdateProductAsync(Product product)\\n{\\n    await _dbContext.Products.UpdateAsync(product);\\n    await _dbContext.SaveChangesAsync();\\n\\n    // Invalidate cache\\n    await _cache.RemoveAsync(\\\"ProductList\\\");\\n}\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.ol, {\n      start: \"3\",\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Version-based invalidation\"\n        }), \": Use a version number to track data changes.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Monitoring and Optimization\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"To ensure optimal performance of your Redis cache:\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Use Redis commands like \", _jsx(_components.code, {\n          children: \"INFO\"\n        }), \" and \", _jsx(_components.code, {\n          children: \"MONITOR\"\n        }), \" to track cache usage and performance.\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Implement logging and metrics collection in your application to monitor cache hit/miss rates.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Consider using Redis Sentinel or Redis Cluster for high availability and scalability in production environments.\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Conclusion\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"In this article, we've explored how to use Redis caching with ASP.NET Core and .NET 8. We've covered the basic setup, configuration, and usage of Redis cache, as well as some advanced techniques for optimizing your caching strategy. Redis caching can significantly improve the performance and scalability of your ASP.NET Core application by reducing database load and improving response times.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"As you implement caching in your application, remember to carefully consider your caching strategy, including expiration policies, invalidation methods, and data consistency requirements. With proper implementation, Redis caching can be a powerful tool in your ASP.NET Core application's performance optimization toolkit.\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"References\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://docs.microsoft.com/en-us/aspnet/core/performance/caching/middleware\",\n          children: \"ASP.NET Core Response Caching Middleware\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://redis.io/documentation\",\n          children: \"Redis documentation\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://stackexchange.github.io/StackExchange.Redis/\",\n          children: \"StackExchange.Redis documentation\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://docs.microsoft.com/en-us/aspnet/core/performance/caching/distributed\",\n          children: \"Distributed caching in ASP.NET Core\"\n        })\n      }), \"\\n\", _jsx(_components.li, {\n        children: _jsx(_components.a, {\n          href: \"https://github.com/neuecc/MessagePack-CSharp\",\n          children: \"MessagePack for C#\"\n        })\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.hr, {})]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}2:["$","article",null,{"className":"container mx-auto px-4 py-8 max-w-4xl","children":[["$","div",null,{"className":"mb-8","children":[["$","div",null,{"className":"flex items-center text-sm text-gray-500 dark:text-gray-400 mb-4","children":[["$","span",null,{"children":"2024-10-01"}],["$","span",null,{"className":"mx-2","children":"â¢"}],["$","span",null,{"children":["5"," min read"]}]]}],["$","h1",null,{"className":"text-4xl font-bold mb-4","children":"How to Use Redis Caching With ASP.NET Core and .NET 8"}],["$","p",null,{"className":"text-xl text-gray-600 dark:text-gray-300 mb-6","children":"Learn how to use Redis caching with ASP.NET Core and .NET 8 to improve application performance and scalability."}],["$","div",null,{"className":"aspect-video relative overflow-hidden rounded-lg mb-8","children":["$","img",null,{"src":"https://ik.imagekit.io/quadrate/assets/img/dotnetevangelist/Redis_Caching_With_AspNet_Core_And_Net8.jpg?updatedAt=1746813307147","alt":"How to Use Redis Caching With ASP.NET Core and .NET 8","className":"object-cover w-full h-full"}]}],["$","div",null,{"className":"flex flex-wrap gap-2 mb-8","children":[["$","$L7","Redis",{"href":"/tags/Redis","className":"text-sm bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 px-3 py-1 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Redis"]}],["$","$L7","Caching",{"href":"/tags/Caching","className":"text-sm bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 px-3 py-1 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Caching"]}],["$","$L7","Aspnetcore",{"href":"/tags/Aspnetcore","className":"text-sm bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 px-3 py-1 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Aspnetcore"]}],["$","$L7","Dotnet8",{"href":"/tags/Dotnet8","className":"text-sm bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 px-3 py-1 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Dotnet8"]}],["$","$L7","Performance",{"href":"/tags/Performance","className":"text-sm bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 px-3 py-1 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Performance"]}]]}]]}],["$","$Lc",null,{"content":"$d"}],["$","div",null,{"className":"mt-12 pt-8 border-t border-gray-200 dark:border-gray-800","children":[["$","h2",null,{"className":"text-2xl font-bold mb-4","children":"Share this post"}],["$","div",null,{"className":"flex space-x-4","children":[["$","a",null,{"href":"https://twitter.com/intent/tweet?text=How%20to%20Use%20Redis%20Caching%20With%20ASP.NET%20Core%20and%20.NET%208&url=https%3A%2F%2Fdotnetevangelist.com%2Fblog%2Fhow-to-use-redis-caching-with-aspnet-core-and-net-8","target":"_blank","rel":"noopener noreferrer","className":"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded flex items-center","children":"Twitter"}],["$","a",null,{"href":"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fdotnetevangelist.com%2Fblog%2Fhow-to-use-redis-caching-with-aspnet-core-and-net-8","target":"_blank","rel":"noopener noreferrer","className":"bg-blue-800 hover:bg-blue-900 text-white px-4 py-2 rounded flex items-center","children":"Facebook"}],["$","a",null,{"href":"https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fdotnetevangelist.com%2Fblog%2Fhow-to-use-redis-caching-with-aspnet-core-and-net-8","target":"_blank","rel":"noopener noreferrer","className":"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded flex items-center","children":"LinkedIn"}]]}]]}],["$","div",null,{"className":"mt-16 pt-8 border-t border-gray-200 dark:border-gray-800","children":[["$","h2",null,{"className":"text-2xl font-bold mb-4","children":"Related Articles"}],["$","div",null,{"className":"grid grid-cols-1 md:grid-cols-2 gap-6","children":[["$","div",null,{"className":"border border-gray-200 dark:border-gray-800 rounded-lg overflow-hidden shadow-sm hover:shadow-md transition-shadow","children":[["$","div",null,{"className":"aspect-video relative overflow-hidden","children":["$","$Le",null,{"src":"https://ik.imagekit.io/quadrate/assets/img/dotnetevangelist/mastering-common-table-expressions.png?updatedAt=1746993563622","alt":"Mastering Common Table Expressions (CTEs) in PostgreSQL: Recursive Queries and Performance Tips","fill":true,"sizes":"(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw","className":"object-cover","priority":false}]}],["$","div",null,{"className":"p-4","children":[["$","div",null,{"className":"flex items-center text-sm text-gray-500 dark:text-gray-400 mb-2","children":[["$","span",null,{"children":"May 11, 2025"}],["$","span",null,{"className":"mx-2","children":"â¢"}],["$","span",null,{"children":["7"," min read"]}]]}],["$","h2",null,{"className":"text-xl font-semibold mb-2","children":["$","$L7",null,{"href":"/blog/mastering-common-table-expressions-ctes-in-postgresql-recursive-queries-performance-tips","className":"hover:text-blue-600 dark:hover:text-blue-400","children":"Mastering Common Table Expressions (CTEs) in PostgreSQL: Recursive Queries and Performance Tips"}]}],["$","p",null,{"className":"text-gray-600 dark:text-gray-300 mb-4 line-clamp-3","children":"A comprehensive guide to Common Table Expressions (CTEs) in PostgreSQL, including recursive queries, practical use cases, and performance optimization tips for writing efficient, maintainable SQL."}],["$","div",null,{"className":"flex flex-wrap gap-2","children":[["$","$L7","Postgresql",{"href":"/tags/Postgresql","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Postgresql"]}],["$","$L7","Sql",{"href":"/tags/Sql","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Sql"]}],["$","$L7","Cte",{"href":"/tags/Cte","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Cte"]}],["$","$L7","Database",{"href":"/tags/Database","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Database"]}],["$","$L7","Performance",{"href":"/tags/Performance","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Performance"]}],["$","$L7","Recursion",{"href":"/tags/Recursion","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Recursion"]}]]}]]}]]}],["$","div",null,{"className":"border border-gray-200 dark:border-gray-800 rounded-lg overflow-hidden shadow-sm hover:shadow-md transition-shadow","children":[["$","div",null,{"className":"aspect-video relative overflow-hidden","children":["$","$Le",null,{"src":"https://ik.imagekit.io/quadrate/assets/img/dotnetevangelist/blazor-modern-ui-2025.png?updatedAt=1746813295064","alt":"Modern Web UIs with Blazor in 2025: State Management & Component Libraries","fill":true,"sizes":"(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw","className":"object-cover","priority":false}]}],["$","div",null,{"className":"p-4","children":[["$","div",null,{"className":"flex items-center text-sm text-gray-500 dark:text-gray-400 mb-2","children":[["$","span",null,{"children":"Apr 6, 2025"}],["$","span",null,{"className":"mx-2","children":"â¢"}],["$","span",null,{"children":["21"," min read"]}]]}],["$","h2",null,{"className":"text-xl font-semibold mb-2","children":["$","$L7",null,{"href":"/blog/building-modern-web-ui-with-blazor-in-2025","className":"hover:text-blue-600 dark:hover:text-blue-400","children":"Modern Web UIs with Blazor in 2025: State Management & Component Libraries"}]}],["$","p",null,{"className":"text-gray-600 dark:text-gray-300 mb-4 line-clamp-3","children":"Explore the latest advancements in Blazor development for 2025, focusing on state management, popular component libraries like MudBlazor and Radzen, and key performance optimization techniques."}],["$","div",null,{"className":"flex flex-wrap gap-2","children":[["$","$L7","Blazor",{"href":"/tags/Blazor","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Blazor"]}],["$","$L7",".Net",{"href":"/tags/.Net","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#",".Net"]}],["$","$L7","Web Development",{"href":"/tags/Web Development","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Web Development"]}],["$","$L7","Ui",{"href":"/tags/Ui","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Ui"]}],["$","$L7","State Management",{"href":"/tags/State Management","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","State Management"]}],["$","$L7","Mudblazor",{"href":"/tags/Mudblazor","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Mudblazor"]}],["$","$L7","Radzen",{"href":"/tags/Radzen","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Radzen"]}],["$","$L7","Performance",{"href":"/tags/Performance","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Performance"]}],["$","$L7","Asp.net Core",{"href":"/tags/Asp.net Core","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Asp.net Core"]}]]}]]}]]}]]}]]}]]}]
b:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"How to Use Redis Caching With ASP.NET Core and .NET 8 | .NET Evangelist"}],["$","meta","3",{"name":"description","content":"Learn how to use Redis caching with ASP.NET Core and .NET 8 to improve application performance and scalability."}],["$","meta","4",{"property":"og:title","content":"How to Use Redis Caching With ASP.NET Core and .NET 8"}],["$","meta","5",{"property":"og:description","content":"Learn how to use Redis caching with ASP.NET Core and .NET 8 to improve application performance and scalability."}],["$","meta","6",{"property":"og:image","content":"https://ik.imagekit.io/quadrate/assets/img/dotnetevangelist/Redis_Caching_With_AspNet_Core_And_Net8.jpg?updatedAt=1746813307147"}],["$","meta","7",{"property":"og:type","content":"article"}],["$","meta","8",{"property":"article:published_time","content":"2024-10-01"}],["$","meta","9",{"property":"article:author","content":"Your Name"}],["$","meta","10",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","11",{"name":"twitter:title","content":"How to Use Redis Caching With ASP.NET Core and .NET 8"}],["$","meta","12",{"name":"twitter:description","content":"Learn how to use Redis caching with ASP.NET Core and .NET 8 to improve application performance and scalability."}],["$","meta","13",{"name":"twitter:image","content":"https://ik.imagekit.io/quadrate/assets/img/dotnetevangelist/Redis_Caching_With_AspNet_Core_And_Net8.jpg?updatedAt=1746813307147"}],["$","link","14",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}],["$","meta","15",{"name":"next-size-adjust"}]]
1:null
