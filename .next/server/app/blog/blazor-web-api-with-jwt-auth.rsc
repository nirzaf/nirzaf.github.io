3:I[8369,[],""]
5:I[7206,[],""]
6:I[6124,["1893","static/chunks/1893-82c44e1e1ff4f13a.js","3185","static/chunks/app/layout-10e948e6073f84a8.js"],"ThemeProvider"]
7:I[1893,["1893","static/chunks/1893-82c44e1e1ff4f13a.js","231","static/chunks/231-b72d69e4329a1be1.js","308","static/chunks/app/blog/%5Bslug%5D/page-d7c48434154c3f65.js"],""]
8:I[6159,["1893","static/chunks/1893-82c44e1e1ff4f13a.js","231","static/chunks/231-b72d69e4329a1be1.js","1931","static/chunks/app/page-88df9313d37b14f9.js"],"HeaderSearch"]
9:I[5727,["1893","static/chunks/1893-82c44e1e1ff4f13a.js","3185","static/chunks/app/layout-10e948e6073f84a8.js"],"MobileMenu"]
a:I[94,["1893","static/chunks/1893-82c44e1e1ff4f13a.js","3185","static/chunks/app/layout-10e948e6073f84a8.js"],"ThemeToggle"]
4:["slug","blazor-web-api-with-jwt-auth","d"]
0:["GpO592H_LkmWyA7BodWZx",[[["",{"children":["blog",{"children":[["slug","blazor-web-api-with-jwt-auth","d"],{"children":["__PAGE__?{\"slug\":\"blazor-web-api-with-jwt-auth\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["blog",{"children":[["slug","blazor-web-api-with-jwt-auth","d"],{"children":["__PAGE__",{},[["$L1","$L2",null],null],null]},[null,["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[null,["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/0b32324c4996f85d.css","precedence":"next","crossOrigin":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"className":"__variable_d65c78 __variable_5899e0 antialiased min-h-screen flex flex-col","children":["$","$L6",null,{"children":[["$","header",null,{"className":"bg-white dark:bg-gray-900 shadow-md","children":["$","div",null,{"className":"container mx-auto px-4 py-3 flex justify-between items-center","children":[["$","$L7",null,{"href":"/","className":"flex items-center hover:opacity-90 transition-opacity","children":["$","div",null,{"className":"flex items-center","children":[["$","div",null,{"className":"relative h-12 w-16 md:h-14 md:w-20","children":["$","img",null,{"src":"https://ik.imagekit.io/quadrate/assets/img/dotnetevangelist/dotnetlogo.png?updatedAt=1746982028912","alt":".NET Logo","className":"object-contain h-full w-full"}]}],["$","span",null,{"className":"text-xl md:text-2xl font-bold bg-gradient-to-r from-blue-500 to-cyan-400 text-transparent bg-clip-text ml-1","children":"Evangelist"}]]}]}],["$","div",null,{"className":"flex-1 mx-6 max-w-md hidden md:block","children":["$","$L8",null,{}]}],["$","div",null,{"className":"flex items-center space-x-6","children":[["$","nav",null,{"className":"hidden md:block","children":["$","ul",null,{"className":"flex space-x-8","children":[["$","li",null,{"children":["$","$L7",null,{"href":"/","className":"text-gray-800 dark:text-gray-200 font-medium hover:text-blue-600 dark:hover:text-blue-400 py-2 transition-colors relative group","children":["Home",["$","span",null,{"className":"absolute bottom-0 left-0 w-0 h-0.5 bg-blue-600 dark:bg-blue-400 group-hover:w-full transition-all duration-300"}]]}]}],["$","li",null,{"children":["$","$L7",null,{"href":"/blog","className":"text-gray-800 dark:text-gray-200 font-medium hover:text-blue-600 dark:hover:text-blue-400 py-2 transition-colors relative group","children":["Blogs",["$","span",null,{"className":"absolute bottom-0 left-0 w-0 h-0.5 bg-blue-600 dark:bg-blue-400 group-hover:w-full transition-all duration-300"}]]}]}],["$","li",null,{"children":["$","$L7",null,{"href":"/about","className":"text-gray-800 dark:text-gray-200 font-medium hover:text-blue-600 dark:hover:text-blue-400 py-2 transition-colors relative group","children":["About",["$","span",null,{"className":"absolute bottom-0 left-0 w-0 h-0.5 bg-blue-600 dark:bg-blue-400 group-hover:w-full transition-all duration-300"}]]}]}]]}]}],["$","$L9",null,{}],["$","$La",null,{}]]}]]}]}],["$","main",null,{"className":"flex-grow","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"container mx-auto px-4 py-16 text-center","children":[["$","h1",null,{"className":"text-4xl font-bold mb-4","children":"404 - Page Not Found"}],["$","p",null,{"className":"text-xl text-gray-600 dark:text-gray-300 mb-8","children":"The page you are looking for does not exist."}],["$","div",null,{"className":"flex justify-center","children":["$","$L7",null,{"href":"/","className":"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded","data-cy":"home-link","children":"Return Home"}]}]]}],"notFoundStyles":[]}]}],["$","footer",null,{"className":"bg-white dark:bg-gray-900 py-8 mt-12 border-t border-gray-200 dark:border-gray-800","children":["$","div",null,{"className":"container mx-auto px-4","children":["$","div",null,{"className":"flex flex-col md:flex-row justify-between items-center","children":[["$","div",null,{"className":"mb-6 md:mb-0","children":[["$","$L7",null,{"href":"/","className":"flex items-center hover:opacity-90 transition-opacity mb-4","children":["$","div",null,{"className":"flex items-center","children":[["$","div",null,{"className":"relative h-10 w-14 md:h-12 md:w-16","children":["$","img",null,{"src":"https://ik.imagekit.io/quadrate/assets/img/dotnetevangelist/dotnetlogo.png?updatedAt=1746982028912","alt":".NET Logo","className":"object-contain h-full w-full"}]}],["$","span",null,{"className":"text-lg md:text-xl font-bold bg-gradient-to-r from-blue-500 to-cyan-400 text-transparent bg-clip-text ml-1","children":"Evangelist"}]]}]}],["$","p",null,{"className":"text-gray-600 dark:text-gray-300 mt-2","children":"Â© 2025 .NET Evangelist. All rights reserved."}]]}],["$","div",null,{"className":"grid grid-cols-2 gap-x-8 gap-y-4","children":[["$","div",null,{"children":[["$","h3",null,{"className":"text-sm font-semibold text-gray-800 dark:text-white uppercase tracking-wider mb-3","children":"Navigation"}],["$","ul",null,{"className":"space-y-2","children":[["$","li",null,{"children":["$","$L7",null,{"href":"/","className":"text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors font-medium","children":"Home"}]}],["$","li",null,{"children":["$","$L7",null,{"href":"/blog","className":"text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors font-medium","children":"Blogs"}]}],["$","li",null,{"children":["$","$L7",null,{"href":"/about","className":"text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors font-medium","children":"About"}]}]]}]]}],["$","div",null,{"children":[["$","h3",null,{"className":"text-sm font-semibold text-gray-800 dark:text-white uppercase tracking-wider mb-3","children":"Connect"}],["$","ul",null,{"className":"space-y-2","children":[["$","li",null,{"children":["$","a",null,{"href":"#","className":"text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors flex items-center font-medium","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","className":"h-4 w-4 mr-2","fill":"currentColor","viewBox":"0 0 24 24","children":["$","path",null,{"d":"M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z"}]}],"Twitter"]}]}],["$","li",null,{"children":["$","a",null,{"href":"#","className":"text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors flex items-center font-medium","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","className":"h-4 w-4 mr-2","fill":"currentColor","viewBox":"0 0 24 24","children":["$","path",null,{"d":"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"}]}],"GitHub"]}]}],["$","li",null,{"children":["$","a",null,{"href":"#","className":"text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors flex items-center font-medium","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","className":"h-4 w-4 mr-2","fill":"currentColor","viewBox":"0 0 24 24","children":["$","path",null,{"d":"M4.98 3.5c0 1.381-1.11 2.5-2.48 2.5s-2.48-1.119-2.48-2.5c0-1.38 1.11-2.5 2.48-2.5s2.48 1.12 2.48 2.5zm.02 4.5h-5v16h5v-16zm7.982 0h-4.968v16h4.969v-8.399c0-4.67 6.029-5.052 6.029 0v8.399h4.988v-10.131c0-7.88-8.922-7.593-11.018-3.714v-2.155z"}]}],"LinkedIn"]}]}]]}]]}]]}]]}]}]}]]}]}]}]],null],null],["$Lb",null]]]]
c:I[2364,["1893","static/chunks/1893-82c44e1e1ff4f13a.js","231","static/chunks/231-b72d69e4329a1be1.js","308","static/chunks/app/blog/%5Bslug%5D/page-d7c48434154c3f65.js"],"BlogContent"]
e:I[231,["1893","static/chunks/1893-82c44e1e1ff4f13a.js","231","static/chunks/231-b72d69e4329a1be1.js","308","static/chunks/app/blog/%5Bslug%5D/page-d7c48434154c3f65.js"],"Image"]
d:T3ee2,{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    strong: \"strong\",\n    a: \"a\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"Microsoft Blazor WebAssembly with JWT Authentication in .NET 8\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"I would like to share a guide on how to implement a JWT Authentication system into a .NET 8 Web API project that uses Microsoft's Blazor WebAssembly, but this same guide can be used for regular ASP.NET Core Web API's.\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"If you have not heard of Blazor, I encourage you to take a look at it. In a nutshell, it allows you to write client-side and server-side code using just C#, take a minute to let that sink inâ¦ This means no JavaScript needed to write UI, wellâ¦ there are ways to still use JavaScript using the JavaScript interop if there are no other libraries available in C#.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"I hope you find this guide useful and I will post the source code onto \", _jsx(_components.a, {\n        href: \"https://github.com/nirzaf/DotnetCoreJwtAuthentication.git\",\n        children: \"GitHub\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Assumptions\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"You have Visual Studio 2022 (any edition) v17.8 or later. If you are using anything else then at least have knowledge of the dotnet command line.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"You know how to use the NuGet package manager\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"You know C# and how to build a basic web project.\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"You know what JWT tokens are and why you have chosen to use them\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Let's begin\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"First off, ensure you have the latest .NET 8 SDK installed. You can download it from the \", _jsx(_components.a, {\n        href: \"https://dotnet.microsoft.com/download/dotnet/8.0\",\n        children: \"official .NET website\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Create a new Blazor WebAssembly project with ASP.NET Core hosted option. At the time of writing this guide, you can choose \\\"Individual Accounts\\\" for authentication when creating the project.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Next step is to install a few NuGet packages into our Server project:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"Microsoft.AspNetCore.Authentication.JwtBearer\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Your Server.csproj file should look similar to this:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-xml\",\n        children: \"<Project Sdk=\\\"Microsoft.NET.Sdk.Web\\\">\\n\\n  <PropertyGroup>\\n    <TargetFramework>net8.0</TargetFramework>\\n    <Nullable>enable</Nullable>\\n    <ImplicitUsings>enable</ImplicitUsings>\\n  </PropertyGroup>\\n\\n  <ItemGroup>\\n    <PackageReference Include=\\\"Microsoft.AspNetCore.Authentication.JwtBearer\\\" Version=\\\"8.0.0\\\" />\\n    <PackageReference Include=\\\"Microsoft.AspNetCore.Components.WebAssembly.Server\\\" Version=\\\"8.0.0\\\" />\\n  </ItemGroup>\\n\\n  <ItemGroup>\\n    <ProjectReference Include=\\\"..\\\\Client\\\\Client.csproj\\\" />\\n    <ProjectReference Include=\\\"..\\\\Shared\\\\Shared.csproj\\\" />\\n  </ItemGroup>\\n\\n</Project>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Next, we need to setup our Program.cs file in the Server project. In .NET 8, we use the new minimal hosting model, so our setup will look a bit different:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-csharp\",\n        children: \"using Microsoft.AspNetCore.Authentication.JwtBearer;\\nusing Microsoft.IdentityModel.Tokens;\\nusing System.Text;\\n\\nvar builder = WebApplication.CreateBuilder(args);\\n\\nbuilder.Services.AddAuthentication(JwtBearerDefaults.AuthenticationScheme)\\n    .AddJwtBearer(options =>\\n    {\\n        options.TokenValidationParameters = new TokenValidationParameters\\n        {\\n            ValidateIssuer = true,\\n            ValidateAudience = true,\\n            ValidateLifetime = true,\\n            ValidateIssuerSigningKey = true,\\n            ValidIssuer = builder.Configuration[\\\"Jwt:Issuer\\\"],\\n            ValidAudience = builder.Configuration[\\\"Jwt:Audience\\\"],\\n            IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(builder.Configuration[\\\"Jwt:Key\\\"]))\\n        };\\n    });\\n\\nbuilder.Services.AddControllersWithViews();\\nbuilder.Services.AddRazorPages();\\n\\nvar app = builder.Build();\\n\\n// Configure the HTTP request pipeline.\\nif (app.Environment.IsDevelopment())\\n{\\n    app.UseWebAssemblyDebugging();\\n}\\nelse\\n{\\n    app.UseExceptionHandler(\\\"/Error\\\");\\n    app.UseHsts();\\n}\\n\\napp.UseHttpsRedirection();\\napp.UseBlazorFrameworkFiles();\\napp.UseStaticFiles();\\n\\napp.UseRouting();\\n\\napp.UseAuthentication();\\napp.UseAuthorization();\\n\\napp.MapRazorPages();\\napp.MapControllers();\\napp.MapFallbackToFile(\\\"index.html\\\");\\n\\napp.Run();\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Now create an \\\"appsettings.json\\\" file in the root of your Server project and open it. Add in the \\\"Jwt\\\" json to setup the token:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-json\",\n        children: \"{\\n  \\\"Jwt\\\": {\\n    \\\"Key\\\": \\\"ThisismySecretKey\\\",\\n    \\\"Issuer\\\": \\\"Test.com\\\",\\n    \\\"Audience\\\": \\\"Test.com\\\"\\n  },\\n  \\\"ConnectionStrings\\\": {\\n    \\\"DefaultConnection\\\": \\\"Server=(localdb)\\\\\\\\mssqllocaldb;Database=aspnet-BlazorApp-53D9B3A5-4C2A-4A5A-8A5A-4C2A4A5A8A5A;Trusted_Connection=True;MultipleActiveResultSets=true\\\"\\n  }\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Next, we'll create a JwtTokenService. First, let's create an interface:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-csharp\",\n        children: \"public interface IJwtTokenService\\n{\\n    string BuildToken(string email);\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Then create the implementation:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-csharp\",\n        children: \"using Microsoft.IdentityModel.Tokens;\\nusing System.IdentityModel.Tokens.Jwt;\\nusing System.Security.Claims;\\nusing System.Text;\\n\\npublic class JwtTokenService : IJwtTokenService\\n{\\n    private readonly IConfiguration _configuration;\\n\\n    public JwtTokenService(IConfiguration configuration)\\n    {\\n        _configuration = configuration;\\n    }\\n\\n    public string BuildToken(string email)\\n    {\\n        var claims = new[]\\n        {\\n            new Claim(JwtRegisteredClaimNames.Sub, email),\\n            new Claim(JwtRegisteredClaimNames.Jti, Guid.NewGuid().ToString())\\n        };\\n\\n        var key = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(_configuration[\\\"Jwt:Key\\\"]));\\n        var creds = new SigningCredentials(key, SecurityAlgorithms.HmacSha256);\\n\\n        var token = new JwtSecurityToken(\\n            issuer: _configuration[\\\"Jwt:Issuer\\\"],\\n            audience: _configuration[\\\"Jwt:Audience\\\"],\\n            claims: claims,\\n            expires: DateTime.Now.AddMinutes(30),\\n            signingCredentials: creds);\\n\\n        return new JwtSecurityTokenHandler().WriteToken(token);\\n    }\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Don't forget to register this service in your Program.cs:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-csharp\",\n        children: \"builder.Services.AddSingleton<IJwtTokenService, JwtTokenService>();\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Now, let's create a TokenViewModel in the Shared project:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-csharp\",\n        children: \"public class TokenViewModel\\n{\\n    public string Email { get; set; }\\n    public string Password { get; set; }\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Next, we'll create a TokenController:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-csharp\",\n        children: \"using Microsoft.AspNetCore.Identity;\\nusing Microsoft.AspNetCore.Mvc;\\nusing Shared;\\n\\n[Route(\\\"api/[controller]\\\")]\\n[ApiController]\\npublic class TokenController : ControllerBase\\n{\\n    private readonly IJwtTokenService _tokenService;\\n    private readonly UserManager<IdentityUser> _userManager;\\n\\n    public TokenController(IJwtTokenService tokenService, UserManager<IdentityUser> userManager)\\n    {\\n        _tokenService = tokenService;\\n        _userManager = userManager;\\n    }\\n\\n    [HttpPost(\\\"register\\\")]\\n    public async Task<IActionResult> Register([FromBody] TokenViewModel model)\\n    {\\n        if (model == null)\\n        {\\n            return BadRequest(\\\"Invalid client request\\\");\\n        }\\n\\n        var user = new IdentityUser { UserName = model.Email, Email = model.Email };\\n        var result = await _userManager.CreateAsync(user, model.Password);\\n\\n        if (!result.Succeeded)\\n        {\\n            return BadRequest(result.Errors);\\n        }\\n\\n        return Ok(\\\"User created successfully\\\");\\n    }\\n\\n    [HttpPost(\\\"login\\\")]\\n    public async Task<IActionResult> Login([FromBody] TokenViewModel model)\\n    {\\n        if (model == null)\\n        {\\n            return BadRequest(\\\"Invalid client request\\\");\\n        }\\n\\n        var user = await _userManager.FindByEmailAsync(model.Email);\\n        if (user == null || !await _userManager.CheckPasswordAsync(user, model.Password))\\n        {\\n            return Unauthorized();\\n        }\\n\\n        var tokenString = _tokenService.BuildToken(model.Email);\\n        return Ok(new { Token = tokenString });\\n    }\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Now, let's update the Client project. Create a Registration.razor page:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-razor\",\n        children: \"@page \\\"/registration\\\"\\n@inject HttpClient Http\\n@inject NavigationManager NavigationManager\\n\\n<h3>Registration</h3>\\n\\n<EditForm Model=\\\"@model\\\" OnValidSubmit=\\\"HandleValidSubmit\\\">\\n    <DataAnnotationsValidator />\\n    <ValidationSummary />\\n\\n    <div className=\\\"form-group\\\">\\n        <label for=\\\"email\\\">Email</label>\\n        <InputText id=\\\"email\\\" className=\\\"form-control\\\" @bind-Value=\\\"model.Email\\\" />\\n    </div>\\n\\n    <div className=\\\"form-group\\\">\\n        <label for=\\\"password\\\">Password</label>\\n        <InputText id=\\\"password\\\" type=\\\"password\\\" className=\\\"form-control\\\" @bind-Value=\\\"model.Password\\\" />\\n    </div>\\n\\n    <button type=\\\"submit\\\" className=\\\"btn btn-primary\\\">Submit</button>\\n</EditForm>\\n\\n@code {\\n    private TokenViewModel model = new();\\n\\n    private async Task HandleValidSubmit()\\n    {\\n        var response = await Http.PostAsJsonAsync(\\\"api/Token/register\\\", model);\\n        if (response.IsSuccessStatusCode)\\n        {\\n            NavigationManager.NavigateTo(\\\"/login\\\");\\n        }\\n        else\\n        {\\n            Console.WriteLine(\\\"Registration failed\\\");\\n        }\\n    }\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"And update the Login.razor page:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-razor\",\n        children: \"@page \\\"/login\\\"\\n@inject HttpClient Http\\n@inject NavigationManager NavigationManager\\n\\n<h3>Login</h3>\\n\\n<EditForm Model=\\\"@model\\\" OnValidSubmit=\\\"HandleValidSubmit\\\">\\n    <DataAnnotationsValidator />\\n    <ValidationSummary />\\n\\n    <div className=\\\"form-group\\\">\\n        <label for=\\\"email\\\">Email</label>\\n        <InputText id=\\\"email\\\" className=\\\"form-control\\\" @bind-Value=\\\"model.Email\\\" />\\n    </div>\\n\\n    <div className=\\\"form-group\\\">\\n        <label for=\\\"password\\\">Password</label>\\n        <InputText id=\\\"password\\\" type=\\\"password\\\" className=\\\"form-control\\\" @bind-Value=\\\"model.Password\\\" />\\n    </div>\\n\\n    <button type=\\\"submit\\\" className=\\\"btn btn-primary\\\">Submit</button>\\n</EditForm>\\n\\n@code {\\n    private TokenViewModel model = new();\\n    private string Token { get; set; }\\n\\n    private async Task HandleValidSubmit()\\n    {\\n        var response = await Http.PostAsJsonAsync(\\\"api/Token/login\\\", model);\\n        if (response.IsSuccessStatusCode)\\n        {\\n            var result = await response.Content.ReadFromJsonAsync<TokenResult>();\\n            Token = result.Token;\\n            Console.WriteLine($\\\"Token: {Token}\\\");\\n            // Here you would typically store the token and redirect to a protected page\\n        }\\n        else\\n        {\\n            Console.WriteLine(\\\"Login failed\\\");\\n        }\\n    }\\n\\n    private class TokenResult\\n    {\\n        public string Token { get; set; }\\n    }\\n}\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"That's it! You now have a basic JWT authentication system set up with Blazor WebAssembly and .NET 8. Remember to handle token storage and include the token in subsequent API requests for authenticated endpoints.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"As always, when using JWT authentication, it's highly recommended to use HTTPS. In .NET 8, HTTPS is enabled by default for production environments.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"I hope this updated guide helps you create your own JWT authentication apps with Blazor WebAssembly and .NET 8. JWT is a powerful tool, and I encourage you to explore its capabilities further for securing different areas of your application.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"And remember to keep supporting Blazor as it continues to evolve and improve the web development experience for C# developers!\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}2:["$","article",null,{"className":"container mx-auto px-4 py-8 max-w-4xl","children":[["$","div",null,{"className":"mb-8","children":[["$","div",null,{"className":"flex items-center text-sm text-gray-500 dark:text-gray-400 mb-4","children":[["$","span",null,{"children":"2024-10-01"}],["$","span",null,{"className":"mx-2","children":"â¢"}],["$","span",null,{"children":["6"," min read"]}]]}],["$","h1",null,{"className":"text-4xl font-bold mb-4","children":"Microsoft Blazor WebAssembly with JWT Authentication in .NET 8"}],["$","p",null,{"className":"text-xl text-gray-600 dark:text-gray-300 mb-6","children":"A guide on how to implement a JWT Authentication system into a .NET 8 Web API project that uses Microsoft's Blazor WebAssembly."}],["$","div",null,{"className":"aspect-video relative overflow-hidden rounded-lg mb-8","children":["$","img",null,{"src":"https://ik.imagekit.io/quadrate/assets/img/dotnetevangelist/blazor_web_assembly_jwt.jpg?updatedAt=1746813307225","alt":"Microsoft Blazor WebAssembly with JWT Authentication in .NET 8","className":"object-cover w-full h-full"}]}],["$","div",null,{"className":"flex flex-wrap gap-2 mb-8","children":[["$","$L7","Blazor",{"href":"/tags/Blazor","className":"text-sm bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 px-3 py-1 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Blazor"]}],["$","$L7","Jwt",{"href":"/tags/Jwt","className":"text-sm bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 px-3 py-1 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Jwt"]}],["$","$L7","Dotnet8",{"href":"/tags/Dotnet8","className":"text-sm bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 px-3 py-1 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Dotnet8"]}]]}]]}],["$","$Lc",null,{"content":"$d"}],["$","div",null,{"className":"mt-12 pt-8 border-t border-gray-200 dark:border-gray-800","children":[["$","h2",null,{"className":"text-2xl font-bold mb-4","children":"Share this post"}],["$","div",null,{"className":"flex space-x-4","children":[["$","a",null,{"href":"https://twitter.com/intent/tweet?text=Microsoft%20Blazor%20WebAssembly%20with%20JWT%20Authentication%20in%20.NET%208&url=https%3A%2F%2Fdotnetevangelist.com%2Fblog%2Fblazor-web-api-with-jwt-auth","target":"_blank","rel":"noopener noreferrer","className":"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded flex items-center","children":"Twitter"}],["$","a",null,{"href":"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fdotnetevangelist.com%2Fblog%2Fblazor-web-api-with-jwt-auth","target":"_blank","rel":"noopener noreferrer","className":"bg-blue-800 hover:bg-blue-900 text-white px-4 py-2 rounded flex items-center","children":"Facebook"}],["$","a",null,{"href":"https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fdotnetevangelist.com%2Fblog%2Fblazor-web-api-with-jwt-auth","target":"_blank","rel":"noopener noreferrer","className":"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded flex items-center","children":"LinkedIn"}]]}]]}],["$","div",null,{"className":"mt-16 pt-8 border-t border-gray-200 dark:border-gray-800","children":[["$","h2",null,{"className":"text-2xl font-bold mb-4","children":"Related Articles"}],["$","div",null,{"className":"grid grid-cols-1 md:grid-cols-2 gap-6","children":[["$","div",null,{"className":"border border-gray-200 dark:border-gray-800 rounded-lg overflow-hidden shadow-sm hover:shadow-md transition-shadow","children":[["$","div",null,{"className":"aspect-video relative overflow-hidden","children":["$","$Le",null,{"src":"https://ik.imagekit.io/quadrate/assets/img/dotnetevangelist/blazor-modern-ui-2025.png?updatedAt=1746813295064","alt":"Modern Web UIs with Blazor in 2025: State Management & Component Libraries","fill":true,"sizes":"(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw","className":"object-cover","priority":false}]}],["$","div",null,{"className":"p-4","children":[["$","div",null,{"className":"flex items-center text-sm text-gray-500 dark:text-gray-400 mb-2","children":[["$","span",null,{"children":"Apr 6, 2025"}],["$","span",null,{"className":"mx-2","children":"â¢"}],["$","span",null,{"children":["21"," min read"]}]]}],["$","h2",null,{"className":"text-xl font-semibold mb-2","children":["$","$L7",null,{"href":"/blog/building-modern-web-ui-with-blazor-in-2025","className":"hover:text-blue-600 dark:hover:text-blue-400","children":"Modern Web UIs with Blazor in 2025: State Management & Component Libraries"}]}],["$","p",null,{"className":"text-gray-600 dark:text-gray-300 mb-4 line-clamp-3","children":"Explore the latest advancements in Blazor development for 2025, focusing on state management, popular component libraries like MudBlazor and Radzen, and key performance optimization techniques."}],["$","div",null,{"className":"flex flex-wrap gap-2","children":[["$","$L7","Blazor",{"href":"/tags/Blazor","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Blazor"]}],["$","$L7",".Net",{"href":"/tags/.Net","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#",".Net"]}],["$","$L7","Web Development",{"href":"/tags/Web Development","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Web Development"]}],["$","$L7","Ui",{"href":"/tags/Ui","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Ui"]}],["$","$L7","State Management",{"href":"/tags/State Management","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","State Management"]}],["$","$L7","Mudblazor",{"href":"/tags/Mudblazor","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Mudblazor"]}],["$","$L7","Radzen",{"href":"/tags/Radzen","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Radzen"]}],["$","$L7","Performance",{"href":"/tags/Performance","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Performance"]}],["$","$L7","Asp.net Core",{"href":"/tags/Asp.net Core","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Asp.net Core"]}]]}]]}]]}],["$","div",null,{"className":"border border-gray-200 dark:border-gray-800 rounded-lg overflow-hidden shadow-sm hover:shadow-md transition-shadow","children":[["$","div",null,{"className":"aspect-video relative overflow-hidden","children":["$","$Le",null,{"src":"https://ik.imagekit.io/quadrate/assets/img/dotnetevangelist/Redis_Caching_With_AspNet_Core_And_Net8.jpg?updatedAt=1746813307147","alt":"How to Use Redis Caching With ASP.NET Core and .NET 8","fill":true,"sizes":"(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw","className":"object-cover","priority":false}]}],["$","div",null,{"className":"p-4","children":[["$","div",null,{"className":"flex items-center text-sm text-gray-500 dark:text-gray-400 mb-2","children":[["$","span",null,{"children":"Oct 1, 2024"}],["$","span",null,{"className":"mx-2","children":"â¢"}],["$","span",null,{"children":["5"," min read"]}]]}],["$","h2",null,{"className":"text-xl font-semibold mb-2","children":["$","$L7",null,{"href":"/blog/how-to-use-redis-caching-with-aspnet-core-and-net-8","className":"hover:text-blue-600 dark:hover:text-blue-400","children":"How to Use Redis Caching With ASP.NET Core and .NET 8"}]}],["$","p",null,{"className":"text-gray-600 dark:text-gray-300 mb-4 line-clamp-3","children":"Learn how to use Redis caching with ASP.NET Core and .NET 8 to improve application performance and scalability."}],["$","div",null,{"className":"flex flex-wrap gap-2","children":[["$","$L7","Redis",{"href":"/tags/Redis","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Redis"]}],["$","$L7","Caching",{"href":"/tags/Caching","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Caching"]}],["$","$L7","Aspnetcore",{"href":"/tags/Aspnetcore","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Aspnetcore"]}],["$","$L7","Dotnet8",{"href":"/tags/Dotnet8","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Dotnet8"]}],["$","$L7","Performance",{"href":"/tags/Performance","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Performance"]}]]}]]}]]}]]}]]}]]}]
b:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Microsoft Blazor WebAssembly with JWT Authentication in .NET 8 | .NET Evangelist"}],["$","meta","3",{"name":"description","content":"A guide on how to implement a JWT Authentication system into a .NET 8 Web API project that uses Microsoft's Blazor WebAssembly."}],["$","meta","4",{"property":"og:title","content":"Microsoft Blazor WebAssembly with JWT Authentication in .NET 8"}],["$","meta","5",{"property":"og:description","content":"A guide on how to implement a JWT Authentication system into a .NET 8 Web API project that uses Microsoft's Blazor WebAssembly."}],["$","meta","6",{"property":"og:image","content":"https://ik.imagekit.io/quadrate/assets/img/dotnetevangelist/blazor_web_assembly_jwt.jpg?updatedAt=1746813307225"}],["$","meta","7",{"property":"og:type","content":"article"}],["$","meta","8",{"property":"article:published_time","content":"2024-10-01"}],["$","meta","9",{"property":"article:author","content":"Your Name"}],["$","meta","10",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","11",{"name":"twitter:title","content":"Microsoft Blazor WebAssembly with JWT Authentication in .NET 8"}],["$","meta","12",{"name":"twitter:description","content":"A guide on how to implement a JWT Authentication system into a .NET 8 Web API project that uses Microsoft's Blazor WebAssembly."}],["$","meta","13",{"name":"twitter:image","content":"https://ik.imagekit.io/quadrate/assets/img/dotnetevangelist/blazor_web_assembly_jwt.jpg?updatedAt=1746813307225"}],["$","link","14",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}],["$","meta","15",{"name":"next-size-adjust"}]]
1:null
