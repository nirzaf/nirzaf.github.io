3:I[8369,[],""]
5:I[7206,[],""]
6:I[6124,["1893","static/chunks/1893-82c44e1e1ff4f13a.js","3185","static/chunks/app/layout-10e948e6073f84a8.js"],"ThemeProvider"]
7:I[1893,["1893","static/chunks/1893-82c44e1e1ff4f13a.js","231","static/chunks/231-b72d69e4329a1be1.js","308","static/chunks/app/blog/%5Bslug%5D/page-d7c48434154c3f65.js"],""]
8:I[6159,["1893","static/chunks/1893-82c44e1e1ff4f13a.js","231","static/chunks/231-b72d69e4329a1be1.js","1931","static/chunks/app/page-88df9313d37b14f9.js"],"HeaderSearch"]
9:I[5727,["1893","static/chunks/1893-82c44e1e1ff4f13a.js","3185","static/chunks/app/layout-10e948e6073f84a8.js"],"MobileMenu"]
a:I[94,["1893","static/chunks/1893-82c44e1e1ff4f13a.js","3185","static/chunks/app/layout-10e948e6073f84a8.js"],"ThemeToggle"]
4:["slug","mastering-kubernetes-google-cloud","d"]
0:["GpO592H_LkmWyA7BodWZx",[[["",{"children":["blog",{"children":[["slug","mastering-kubernetes-google-cloud","d"],{"children":["__PAGE__?{\"slug\":\"mastering-kubernetes-google-cloud\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["blog",{"children":[["slug","mastering-kubernetes-google-cloud","d"],{"children":["__PAGE__",{},[["$L1","$L2",null],null],null]},[null,["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[null,["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/0b32324c4996f85d.css","precedence":"next","crossOrigin":"$undefined"}]],["$","html",null,{"lang":"en","children":["$","body",null,{"className":"__variable_d65c78 __variable_5899e0 antialiased min-h-screen flex flex-col","children":["$","$L6",null,{"children":[["$","header",null,{"className":"bg-white dark:bg-gray-900 shadow-md","children":["$","div",null,{"className":"container mx-auto px-4 py-3 flex justify-between items-center","children":[["$","$L7",null,{"href":"/","className":"flex items-center hover:opacity-90 transition-opacity","children":["$","div",null,{"className":"flex items-center","children":[["$","div",null,{"className":"relative h-12 w-16 md:h-14 md:w-20","children":["$","img",null,{"src":"https://ik.imagekit.io/quadrate/assets/img/dotnetevangelist/dotnetlogo.png?updatedAt=1746982028912","alt":".NET Logo","className":"object-contain h-full w-full"}]}],["$","span",null,{"className":"text-xl md:text-2xl font-bold bg-gradient-to-r from-blue-500 to-cyan-400 text-transparent bg-clip-text ml-1","children":"Evangelist"}]]}]}],["$","div",null,{"className":"flex-1 mx-6 max-w-md hidden md:block","children":["$","$L8",null,{}]}],["$","div",null,{"className":"flex items-center space-x-6","children":[["$","nav",null,{"className":"hidden md:block","children":["$","ul",null,{"className":"flex space-x-8","children":[["$","li",null,{"children":["$","$L7",null,{"href":"/","className":"text-gray-800 dark:text-gray-200 font-medium hover:text-blue-600 dark:hover:text-blue-400 py-2 transition-colors relative group","children":["Home",["$","span",null,{"className":"absolute bottom-0 left-0 w-0 h-0.5 bg-blue-600 dark:bg-blue-400 group-hover:w-full transition-all duration-300"}]]}]}],["$","li",null,{"children":["$","$L7",null,{"href":"/blog","className":"text-gray-800 dark:text-gray-200 font-medium hover:text-blue-600 dark:hover:text-blue-400 py-2 transition-colors relative group","children":["Blogs",["$","span",null,{"className":"absolute bottom-0 left-0 w-0 h-0.5 bg-blue-600 dark:bg-blue-400 group-hover:w-full transition-all duration-300"}]]}]}],["$","li",null,{"children":["$","$L7",null,{"href":"/about","className":"text-gray-800 dark:text-gray-200 font-medium hover:text-blue-600 dark:hover:text-blue-400 py-2 transition-colors relative group","children":["About",["$","span",null,{"className":"absolute bottom-0 left-0 w-0 h-0.5 bg-blue-600 dark:bg-blue-400 group-hover:w-full transition-all duration-300"}]]}]}]]}]}],["$","$L9",null,{}],["$","$La",null,{}]]}]]}]}],["$","main",null,{"className":"flex-grow","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"container mx-auto px-4 py-16 text-center","children":[["$","h1",null,{"className":"text-4xl font-bold mb-4","children":"404 - Page Not Found"}],["$","p",null,{"className":"text-xl text-gray-600 dark:text-gray-300 mb-8","children":"The page you are looking for does not exist."}],["$","div",null,{"className":"flex justify-center","children":["$","$L7",null,{"href":"/","className":"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded","data-cy":"home-link","children":"Return Home"}]}]]}],"notFoundStyles":[]}]}],["$","footer",null,{"className":"bg-white dark:bg-gray-900 py-8 mt-12 border-t border-gray-200 dark:border-gray-800","children":["$","div",null,{"className":"container mx-auto px-4","children":["$","div",null,{"className":"flex flex-col md:flex-row justify-between items-center","children":[["$","div",null,{"className":"mb-6 md:mb-0","children":[["$","$L7",null,{"href":"/","className":"flex items-center hover:opacity-90 transition-opacity mb-4","children":["$","div",null,{"className":"flex items-center","children":[["$","div",null,{"className":"relative h-10 w-14 md:h-12 md:w-16","children":["$","img",null,{"src":"https://ik.imagekit.io/quadrate/assets/img/dotnetevangelist/dotnetlogo.png?updatedAt=1746982028912","alt":".NET Logo","className":"object-contain h-full w-full"}]}],["$","span",null,{"className":"text-lg md:text-xl font-bold bg-gradient-to-r from-blue-500 to-cyan-400 text-transparent bg-clip-text ml-1","children":"Evangelist"}]]}]}],["$","p",null,{"className":"text-gray-600 dark:text-gray-300 mt-2","children":"Â© 2025 .NET Evangelist. All rights reserved."}]]}],["$","div",null,{"className":"grid grid-cols-2 gap-x-8 gap-y-4","children":[["$","div",null,{"children":[["$","h3",null,{"className":"text-sm font-semibold text-gray-800 dark:text-white uppercase tracking-wider mb-3","children":"Navigation"}],["$","ul",null,{"className":"space-y-2","children":[["$","li",null,{"children":["$","$L7",null,{"href":"/","className":"text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors font-medium","children":"Home"}]}],["$","li",null,{"children":["$","$L7",null,{"href":"/blog","className":"text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors font-medium","children":"Blogs"}]}],["$","li",null,{"children":["$","$L7",null,{"href":"/about","className":"text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors font-medium","children":"About"}]}]]}]]}],["$","div",null,{"children":[["$","h3",null,{"className":"text-sm font-semibold text-gray-800 dark:text-white uppercase tracking-wider mb-3","children":"Connect"}],["$","ul",null,{"className":"space-y-2","children":[["$","li",null,{"children":["$","a",null,{"href":"#","className":"text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors flex items-center font-medium","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","className":"h-4 w-4 mr-2","fill":"currentColor","viewBox":"0 0 24 24","children":["$","path",null,{"d":"M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z"}]}],"Twitter"]}]}],["$","li",null,{"children":["$","a",null,{"href":"#","className":"text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors flex items-center font-medium","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","className":"h-4 w-4 mr-2","fill":"currentColor","viewBox":"0 0 24 24","children":["$","path",null,{"d":"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"}]}],"GitHub"]}]}],["$","li",null,{"children":["$","a",null,{"href":"#","className":"text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors flex items-center font-medium","children":[["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","className":"h-4 w-4 mr-2","fill":"currentColor","viewBox":"0 0 24 24","children":["$","path",null,{"d":"M4.98 3.5c0 1.381-1.11 2.5-2.48 2.5s-2.48-1.119-2.48-2.5c0-1.38 1.11-2.5 2.48-2.5s2.48 1.12 2.48 2.5zm.02 4.5h-5v16h5v-16zm7.982 0h-4.968v16h4.969v-8.399c0-4.67 6.029-5.052 6.029 0v8.399h4.988v-10.131c0-7.88-8.922-7.593-11.018-3.714v-2.155z"}]}],"LinkedIn"]}]}]]}]]}]]}]]}]}]}]]}]}]}]],null],null],["$Lb",null]]]]
c:I[2364,["1893","static/chunks/1893-82c44e1e1ff4f13a.js","231","static/chunks/231-b72d69e4329a1be1.js","308","static/chunks/app/blog/%5Bslug%5D/page-d7c48434154c3f65.js"],"BlogContent"]
e:I[231,["1893","static/chunks/1893-82c44e1e1ff4f13a.js","231","static/chunks/231-b72d69e4329a1be1.js","308","static/chunks/app/blog/%5Bslug%5D/page-d7c48434154c3f65.js"],"Image"]
d:Tbf3c,{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h3: \"h3\",\n    h4: \"h4\",\n    strong: \"strong\",\n    ul: \"ul\",\n    li: \"li\",\n    code: \"code\",\n    pre: \"pre\",\n    ol: \"ol\",\n    a: \"a\",\n    em: \"em\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: \"Kubernetes has revolutionized how we manage containerized applications, establishing itself as the de facto standard for orchestration. Google Cloud Platform (GCP) offers a powerful, managed Kubernetes service called Google Kubernetes Engine (GKE), which simplifies cluster operations and integrates seamlessly with the GCP ecosystem. This guide will walk you through leveraging Kubernetes on Google Cloud, from understanding core concepts and initial setup to advanced deployment strategies and operational best practices, ensuring your applications are scalable, resilient, and efficiently managed.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Understanding Core Concepts: Kubernetes and GKE\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Before diving into GKE, let's clarify what Kubernetes is and how GKE builds upon it.\"\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"Kubernetes: The Container Orchestrator\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Kubernetes (often abbreviated as K8s) is an open-source platform designed to automate the deployment, scaling, and management of containerized applications. It groups containers that make up an application into logical units for easy management and discovery.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Key Kubernetes Components:\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Control Plane:\"\n        }), \" The brain of the cluster. It manages worker nodes and Pods in the cluster. Components include:\", \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"kube-apiserver\"\n            }), \": Exposes the Kubernetes API.\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"etcd\"\n            }), \": Consistent and highly-available key-value store used as Kubernetes' backing store for all cluster data.\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"kube-scheduler\"\n            }), \": Watches for newly created Pods with no assigned node and selects a node for them to run on.\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"kube-controller-manager\"\n            }), \": Runs controller processes.\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Nodes (Worker Machines):\"\n        }), \" VMs or physical machines where your containerized applications run. Each node contains:\", \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"kubelet\"\n            }), \": An agent that runs on each node. It makes sure that containers are running in a Pod.\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.code, {\n              children: \"kube-proxy\"\n            }), \": A network proxy that runs on each node, implementing part of the Kubernetes Service concept.\"]\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Container Runtime: Software responsible for running containers (e.g., Docker, containerd).\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Pods:\"\n        }), \" The smallest deployable units of computing that you can create and manage in Kubernetes. A Pod represents a single instance of a running process in your cluster and can contain one or more containers.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Services:\"\n        }), \" An abstract way to expose an application running on a set of Pods as a network service.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Deployments:\"\n        }), \" Provides declarative updates for Pods and ReplicaSets (which ensure a specified number of Pod replicas are running).\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      \"data-type\": \"mermaid\",\n      children: _jsx(_components.code, {\n        className: \"language-mermaid\",\n        children: \"graph TD\\n    subgraph ControlPlane[\\\"Control Plane\\\"]\\n        APIServer[\\\"kube-apiserver\\\"]\\n        ETCD[\\\"etcd (Cluster State Store)\\\"]\\n        Scheduler[\\\"kube-scheduler\\\"]\\n        ControllerManager[\\\"kube-controller-manager\\\"]\\n    end\\n\\n    subgraph Node1Worker[\\\"Node 1 (Worker)\\\"]\\n        Kubelet1[\\\"kubelet\\\"]\\n        KubeProxy1[\\\"kube-proxy (Manages Network Rules on Node)\\\"]\\n        ContainerRuntime1[\\\"Container Runtime (e.g., Docker, containerd)\\\"]\\n        Pod1[\\\"Pod (App 1 Container)\\\"]\\n        Pod2[\\\"Pod (App 2 Container)\\\"]\\n    end\\n\\n    subgraph Node2Worker[\\\"Node 2 (Worker)\\\"]\\n        Kubelet2[\\\"kubelet\\\"]\\n        KubeProxy2[\\\"kube-proxy (Manages Network Rules on Node)\\\"]\\n        ContainerRuntime2[\\\"Container Runtime (e.g., Docker, containerd)\\\"]\\n        Pod3[\\\"Pod (App 3 Container)\\\"]\\n    end\\n\\n    User[\\\"User/kubectl\\\"] -- \\\"Sends API Requests\\\" --> APIServer\\n    APIServer -- \\\"Reads/Writes Cluster State\\\" --- ETCD\\n    ControllerManager -- \\\"Watches Resources &<br>Acts via API Server\\\" --> APIServer\\n    Scheduler -- \\\"Watches for Unscheduled Pods &<br>Assigns Node (via API Server)\\\" --> APIServer\\n\\n    APIServer -- \\\"Desired State (Pod Specs, etc.)\\\" --> Kubelet1\\n    APIServer -- \\\"Desired State (Pod Specs, etc.)\\\" --> Kubelet2\\n    \\n    APIServer -- \\\"Service/Endpoint Info\\\" --> KubeProxy1\\n    APIServer -- \\\"Service/Endpoint Info\\\" --> KubeProxy2\\n\\n    Kubelet1 -- \\\"Manages Pod Lifecycle\\\" --> Pod1\\n    Kubelet1 -- \\\"Manages Pod Lifecycle\\\" --> Pod2\\n    Kubelet2 -- \\\"Manages Pod Lifecycle\\\" --> Pod3\\n    \\n    Kubelet1 -- \\\"Instructs\\\" --> ContainerRuntime1\\n    Kubelet2 -- \\\"Instructs\\\" --> ContainerRuntime2\\n\\n    style ControlPlane fill:#f9f,stroke:#333,stroke-width:2px\\n    style Node1Worker fill:#ccf,stroke:#333,stroke-width:2px\\n    style Node2Worker fill:#ccf,stroke:#333,stroke-width:2px\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"Google Kubernetes Engine (GKE): Managed Kubernetes on GCP\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"GKE is Google Cloudâs managed Kubernetes service. It reduces operational overhead by handling much of the cluster management lifecycle, including provisioning, scaling, upgrades, and maintenance of the control plane and, optionally, nodes.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Key Benefits of Using GKE:\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Managed Infrastructure\"\n        }), \": Google manages the Kubernetes control plane (master nodes), ensuring high availability and reliability. For GKE Autopilot clusters, Google also manages the worker nodes.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Seamless Integration\"\n        }), \": Native integration with Google Cloud services like Artifact Registry (for container images), Cloud Monitoring, Cloud Logging, Identity and Access Management (IAM), Virtual Private Cloud (VPC), Cloud Storage, Pub/Sub, and BigQuery.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Scalability & Auto-Scaling\"\n        }), \": Effortlessly scale your applications and cluster infrastructure. GKE supports cluster autoscaling (adding/removing nodes) and horizontal/vertical pod autoscaling.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Enhanced Security\"\n        }), \": Built-in security features, including IAM for fine-grained access control, Workload Identity for secure access to GCP services from Pods, private clusters for network isolation, Shielded GKE Nodes, and Binary Authorization.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Cost Efficiency\"\n        }), \": Features like preemptible VMs (Spot VMs in GKE), committed use discounts, and Autopilot mode (pay per pod resource usage) help optimize costs.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Multiple Cluster Modes\"\n        }), \":\", \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.strong, {\n              children: \"Standard Mode\"\n            }), \": You manage the worker nodes and have full configuration flexibility.\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.strong, {\n              children: \"Autopilot Mode\"\n            }), \": GKE manages the control plane and worker nodes, offering a hands-off, optimized, and more secure experience. You only define your workloads and pay for the resources they request.\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      \"data-type\": \"mermaid\",\n      children: _jsx(_components.code, {\n        className: \"language-mermaid\",\n        children: \"graph TD\\n    subgraph GKEResponsibilityModels[\\\"GKE Responsibility Models\\\"]\\n        direction LR\\n\\n        subgraph GKEStandardMode[\\\"GKE Standard Mode\\\"]\\n            UserStandard[\\\"<b>You Manage:</b><br/>- Applications/Workloads<br/>- Node Pool Configuration<br/> (machine type, size, OS, etc.)<br/>- Node Upgrades & Maintenance<br/>- Workload Security Configs\\\"]\\n            GoogleStandard[\\\"<b>Google Manages:</b><br/>- K8s Control Plane (HA, Upgrades)<br/>- Network Infrastructure<br/>- Base Node OS/Patches<br/>(with auto-upgrade options)\\\"]\\n            UserStandard -. Responsibility .-> GoogleStandard\\n            style UserStandard fill:#D3E5FF,stroke:#333,stroke-width:1px\\n            style GoogleStandard fill:#E1F5E1,stroke:#333,stroke-width:1px\\n        end\\n\\n        subgraph GKEAutopilotMode[\\\"GKE Autopilot Mode\\\"]\\n            UserAutopilot[\\\"<b>You Manage:</b><br/>- Applications/Workloads<br/> (Deployments, Services, etc.)<br/>- Pod Resource Requests/Limits<br/>- Workload Security Configs\\\"]\\n            GoogleAutopilot[\\\"<b>Google Manages:</b><br/>- K8s Control Plane (HA, Upgrades)<br/>- ALL Worker Nodes (Provisioning,<br/> Scaling, OS, Upgrades, Maintenance)<br/>- Optimized Cluster Configurations<br/>- Many Security Best Practices (Baseline)\\\"]\\n            UserAutopilot -. Responsibility .-> GoogleAutopilot\\n            style UserAutopilot fill:#D3E5FF,stroke:#333,stroke-width:1px\\n            style GoogleAutopilot fill:#C8E6C9,stroke:#333,stroke-width:1px\\n        end\\n    end\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Setting Up Your First GKE Cluster on GCP\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"To get started, you'll need a Google Cloud account with billing enabled and the \", _jsx(_components.code, {\n        children: \"gcloud\"\n      }), \" command-line interface (CLI) installed and configured.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Prerequisites:\"\n      })\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Google Cloud Account\"\n        }), \": Sign up if you don't have one.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Billing Enabled\"\n        }), \": Ensure billing is active for your project.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsxs(_components.strong, {\n          children: [_jsx(_components.code, {\n            children: \"gcloud\"\n          }), \" CLI\"]\n        }), \": \", _jsx(_components.a, {\n          href: \"https://cloud.google.com/sdk/docs/install\",\n          children: \"Install and initialize the Google Cloud CLI\"\n        }), \".\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Enable APIs\"\n        }), \": Enable the Kubernetes Engine API and Compute Engine API for your project:\", \"\\n\", _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-bash\",\n            children: \"gcloud services enable container.googleapis.com compute.googleapis.com\\n\"\n          })\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.h4, {\n      children: [\"1. Configure \", _jsx(_components.code, {\n        children: \"gcloud\"\n      }), \" Defaults\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Set your default project and compute zone (choose a region/zone near you or your users):\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"gcloud config set project <YOUR_PROJECT_ID>\\ngcloud config set compute/zone us-central1-a # Example zone\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"2. Create a GKE Cluster\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can create a Standard cluster or an Autopilot cluster.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Option A: Create a GKE Standard Cluster\"\n      }), \"\\nThis command creates a regional Standard cluster with 3 nodes per zone in the specified region, providing higher availability.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"gcloud container clusters create my-gke-cluster \\\\\\n    --region us-central1 \\\\\\n    --num-nodes=1 \\\\\\n    --machine-type=e2-medium \\\\\\n    --release-channel=regular\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"--region\"\n        }), \": Creates a regional cluster (control plane replicated across 3 zones).\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"--num-nodes\"\n        }), \": Number of nodes \", _jsx(_components.em, {\n          children: \"per zone\"\n        }), \" in the region.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"--machine-type\"\n        }), \": Specifies the VM type for nodes.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"--release-channel\"\n        }), \": Subscribes to automatic upgrades (rapid, regular, stable). Recommended.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Option B: Create a GKE Autopilot Cluster\"\n      }), \"\\nAutopilot simplifies operations significantly.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"gcloud container clusters create-auto my-autopilot-cluster \\\\\\n    --region us-central1\\n\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      \"data-type\": \"mermaid\",\n      children: _jsx(_components.code, {\n        className: \"language-mermaid\",\n        children: \"graph LR\\n    A[\\\"User (via gcloud CLI or Console)\\\"] --\\\"1. 'gcloud container clusters create ...'\\\"--> B(\\\"Google Cloud APIs\\\")\\n    B --\\\"2. Instructs GKE Service to Provision\\\"--> C(\\\"GKE Control Plane (Master Nodes)\\\")\\n    B --\\\"3. Instructs Compute Engine to Provision\\\"--> D[\\\"Node Pool(s) with Worker Nodes\\\"]\\n    C -. \\\"Manages & Orchestrates\\\" .-> D\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"3. Get Cluster Credentials\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"After the cluster is created, configure \", _jsx(_components.code, {\n        children: \"kubectl\"\n      }), \" to connect to it:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"# For Standard cluster:\\ngcloud container clusters get-credentials my-gke-cluster --region us-central1\\n\\n# For Autopilot cluster:\\ngcloud container clusters get-credentials my-autopilot-cluster --region us-central1\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"This command updates your \", _jsx(_components.code, {\n        children: \"~/.kube/config\"\n      }), \" file.\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Verify connectivity:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"kubectl get nodes\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"4. Deploying a Containerized Application\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Letâs deploy a simple NGINX web server.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Create a Kubernetes Deployment:\\nA Deployment manages a set of replicated Pods.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"kubectl create deployment nginx-deployment --image=nginx:latest\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This command tells Kubernetes to:\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Pull the \", _jsx(_components.code, {\n          children: \"nginx:latest\"\n        }), \" image (from Docker Hub by default).\"]\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"Create Pods running this image.\"\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Ensure one replica of the Pod is running (default for \", _jsx(_components.code, {\n          children: \"create deployment\"\n        }), \").\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Expose the Deployment with a Service:\\nTo access the NGINX application from the internet, you need to expose it using a Service of type \", _jsx(_components.code, {\n        children: \"LoadBalancer\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"kubectl expose deployment nginx-deployment --port=80 --type=LoadBalancer\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"--port=80\"\n        }), \": The port the Service will listen on.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.code, {\n          children: \"--type=LoadBalancer\"\n        }), \": GKE will provision a Google Cloud Network Load Balancer.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Check the external IP:\\nIt might take a minute or two for the external IP to be assigned.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"kubectl get services nginx-deployment\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Output will look like:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        children: \"NAME               TYPE           CLUSTER-IP    EXTERNAL-IP     PORT(S)        AGE\\nnginx-deployment   LoadBalancer   10.X.X.X      35.X.X.X        80:3XYZW/TCP   60s\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Once the \", _jsx(_components.code, {\n        children: \"EXTERNAL-IP\"\n      }), \" is assigned, you can access your NGINX server by navigating to \", _jsx(_components.code, {\n        children: \"http://<EXTERNAL-IP>\"\n      }), \" in your browser.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      \"data-type\": \"mermaid\",\n      children: _jsx(_components.code, {\n        className: \"language-mermaid\",\n        children: \"graph TD\\n    User[\\\"Internet User\\\"] --> Router[\\\"K8s Service: nginx-deployment<br>(Type: LoadBalancer)\\\"]\\n\\n    subgraph \\\"GKE Cluster\\\"\\n        Router --\\\"Routes Traffic To\\\"--> Pod1[\\\"Pod: NGINX (Instance 1)<br>(on Node A)\\\"]\\n        Router --\\\"Routes Traffic To\\\"--> Pod2[\\\"Pod: NGINX (Instance 2 - if scaled)<br>(on Node B)\\\"]\\n\\n        Deployment[\\\"K8s Deployment: nginx-deployment\\\"] -- Manages --> ReplicaSet[\\\"K8s ReplicaSet\\\"]\\n        ReplicaSet -- \\\"Ensures desired number of\\\" --> Pod1\\n        ReplicaSet -- \\\"Ensures desired number of\\\" --> Pod2\\n        %% Router is a K8s resource, placed here to show it's part of the cluster definition,\\n        %% though it provisions an external GCP LB. The arrow from User comes to its External IP.\\n    end\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Advanced Features and Best Practices\"\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"Auto-Scaling Your Workloads and Cluster\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"GKE provides powerful autoscaling capabilities:\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: \"Horizontal Pod Autoscaler (HPA):\"\n          }), \" Automatically scales the number of Pods in a deployment or replica set based on observed CPU utilization or other custom metrics.\"]\n        }), \"\\n\", _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-bash\",\n            children: \"# Example: Autoscale 'nginx-deployment' to maintain 50% CPU utilization,\\n# with a minimum of 1 Pod and a maximum of 5 Pods.\\nkubectl autoscale deployment nginx-deployment --cpu-percent=50 --min=1 --max=5\\n\"\n          })\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: \"Vertical Pod Autoscaler (VPA):\"\n          }), \" (More common in Standard mode, Autopilot handles this intrinsically) Adjusts the CPU and memory requests for Pods, optimizing resource allocation.\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: \"Cluster Autoscaler (CA):\"\n          }), \" (For Standard GKE) Automatically resizes your cluster's node pools. If HPA needs more Pods but there aren't enough resources on existing nodes, CA provisions new nodes. If nodes are underutilized, CA can remove them.\"]\n        }), \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Enabled by default in Autopilot.\"\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"For Standard, enable during cluster creation or update:\", \"\\n\", _jsx(_components.pre, {\n              children: _jsx(_components.code, {\n                className: \"language-bash\",\n                children: \"gcloud container clusters update my-gke-cluster --enable-autoscaling \\\\\\n    --min-nodes=1 --max-nodes=5 --region us-central1 --node-pool=default-pool\\n\"\n              })\n            }), \"\\n\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      \"data-type\": \"mermaid\",\n      children: _jsx(_components.code, {\n        className: \"language-mermaid\",\n        children: \"graph TD\\n    subgraph \\\"Application Workload Autoscaling (HPA)\\\"\\n        HPA[\\\"Horizontal Pod Autoscaler (HPA)\\\"] -- \\\"1. Watches\\\" --> Metrics[\\\"Pod Metrics (CPU, Memory, Custom)\\\"]\\n        Metrics -- \\\"2. Data for\\\" --> HPA\\n        HPA -- \\\"3. Adjusts Replicas in\\\" --> K8sDeployment[\\\"Kubernetes Deployment\\\"]\\n    end\\n\\n    subgraph \\\"Cluster Infrastructure Autoscaling (CA - Standard GKE)\\\"\\n        CA[\\\"Cluster Autoscaler (CA)\\\"]\\n        CA -- \\\"A. Watches for\\\" --> UnschedulablePods[\\\"Pending/Unschedulable Pods\\\"]\\n        CA -- \\\"B. Watches\\\" --> NodeUtil[\\\"Node Utilization (for scale-down)\\\"]\\n        \\n        UnschedulablePods -- \\\"Triggers Scale Up Action\\\" --> CA\\n        NodeUtil -- \\\"Triggers Scale Down Action\\\" --> CA\\n        CA -- \\\"C. Modifies (Adds/Removes Nodes)\\\" --> NodePool[\\\"Node Pool Size\\\"]\\n    end\\n\\n    K8sDeployment -- \\\"Scaling up by HPA (if no capacity) can create\\\" --> UnschedulablePods\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"Rolling Updates and Rollbacks\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Kubernetes allows you to update your applications with zero downtime using rolling updates.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Performing a Rolling Update:\"\n      }), \"\\nUpdate the image for your \", _jsx(_components.code, {\n        children: \"nginx-deployment\"\n      }), \":\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"kubectl set image deployment/nginx-deployment nginx=nginx:1.25.3 # Assuming 1.25.3 is newer\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Kubernetes will gradually replace old Pods with new ones, ensuring a minimum number of Pods are always available.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Monitoring Rollout Status:\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"kubectl rollout status deployment/nginx-deployment\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [_jsx(_components.strong, {\n        children: \"Rolling Back to a Previous Version:\"\n      }), \"\\nIf the new version has issues, you can quickly roll back:\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"kubectl rollout undo deployment/nginx-deployment\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"To roll back to a specific revision:\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"kubectl rollout history deployment/nginx-deployment\\nkubectl rollout undo deployment/nginx-deployment --to-revision=<REVISION_NUMBER>\\n\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      \"data-type\": \"mermaid\",\n      children: _jsx(_components.code, {\n        className: \"language-mermaid\",\n        children: \"sequenceDiagram\\n    participant User\\n    participant Kubectl_CLI as \\\"kubectl CLI\\\"\\n    participant K8s_API as \\\"Kubernetes API Server\\\"\\n    participant DepController as \\\"Deployment Controller\\\"\\n    participant OldRS_Pods as \\\"Old ReplicaSet & Pods (v1)\\\"\\n    participant NewRS_Pods as \\\"New ReplicaSet & Pods (v2)\\\"\\n\\n    User->>Kubectl_CLI: kubectl set image deployment/nginx nginx=nginx:v2\\n    Kubectl_CLI->>K8s_API: Update Deployment Spec (image: nginx:v2)\\n    K8s_API-->>DepController: Notify Deployment Change\\n    DepController->>NewRS_Pods: Create New ReplicaSet (v2)\\n    DepController->>NewRS_Pods: Scale up New ReplicaSet (e.g., add 1 new Pod v2, respecting maxSurge)\\n    DepController->>OldRS_Pods: Scale down Old ReplicaSet (e.g., terminate 1 old Pod v1, respecting maxUnavailable)\\n    loop Until all old Pods replaced by new Pods\\n        DepController->>NewRS_Pods: Continue scaling up New RS (v2)\\n        DepController->>OldRS_Pods: Continue scaling down Old RS (v1)\\n    end\\n    DepController->>OldRS_Pods: Scale Old ReplicaSet to 0\\n    DepController->>K8s_API: Update Deployment Status (Rollout Complete)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"Integrating with Other Google Cloud Services\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"GKE workloads often need to interact with other GCP services.\"\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: \"Persistent Storage with PersistentVolumeClaims (PVCs) and Persistent Disks:\"\n          }), \"\\nFor stateful applications, you can use GCP Persistent Disks.\"]\n        }), \"\\n\", _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-yaml\",\n            children: \"# persistent-volume-claim.yaml\\napiVersion: v1\\nkind: PersistentVolumeClaim\\nmetadata:\\n  name: my-app-pvc\\nspec:\\n  accessModes:\\n    - ReadWriteOnce # Can be mounted by a single node\\n  resources:\\n    requests:\\n      storage: 10Gi # Request 10 GB of storage\\n  storageClassName: standard-rwo # For regional PD, use premium-rwo; for zonal, use standard or premium\\n\"\n          })\n        }), \"\\n\", _jsxs(_components.p, {\n          children: [\"Apply it: \", _jsx(_components.code, {\n            children: \"kubectl apply -f persistent-volume-claim.yaml\"\n          }), \"\\nThen mount this PVC in your Pod's \", _jsx(_components.code, {\n            children: \"volumeMounts\"\n          }), \" and \", _jsx(_components.code, {\n            children: \"volumes\"\n          }), \" sections. GKE will dynamically provision a Persistent Disk.\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: _jsx(_components.strong, {\n            children: \"Accessing Cloud Storage (GCS) Buckets:\"\n          })\n        }), \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [_jsxs(_components.strong, {\n              children: [\"Using \", _jsx(_components.code, {\n                children: \"gcsfuse\"\n              }), \" Sidecar (older method) or GCS FUSE CSI Driver (recommended):\"]\n            }), \" The CSI driver allows you to mount GCS buckets as volumes directly in your Pods. This is more idiomatic for Kubernetes.\", \"\\n\", _jsxs(_components.ul, {\n              children: [\"\\n\", _jsxs(_components.li, {\n                children: [\"You'll need to install the \", _jsx(_components.a, {\n                  href: \"https://cloud.google.com/kubernetes-engine/docs/how-to/persistent-volumes/cloud-storage-fuse-csi-driver\",\n                  children: \"Cloud Storage FUSE CSI driver\"\n                }), \" in your cluster.\"]\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Then, define a PersistentVolume and PersistentVolumeClaim referencing the CSI driver and your bucket.\"\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.strong, {\n              children: \"Using Client Libraries:\"\n            }), \" Applications can use GCP client libraries (e.g., for Go, Python, Java) with Workload Identity to authenticate and access GCS buckets directly.\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: \"Workload Identity (Recommended for GCP Service Access):\"\n          }), \"\\nSecurely grant Kubernetes service accounts (KSAs) in your GKE cluster the ability to act as Google service accounts (GSAs). This avoids needing to manage service account keys.\"]\n        }), \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsxs(_components.li, {\n            children: [_jsx(_components.strong, {\n              children: \"Steps:\"\n            }), \"\\n\", _jsxs(_components.ol, {\n              children: [\"\\n\", _jsx(_components.li, {\n                children: \"Create a GSA with necessary IAM permissions (e.g., Cloud Storage Object Viewer).\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Create a KSA in your GKE cluster.\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Bind the GSA to the KSA using an IAM policy binding.\"\n              }), \"\\n\", _jsx(_components.li, {\n                children: \"Annotate your KSA with the GSA's email.\"\n              }), \"\\n\", _jsxs(_components.li, {\n                children: [\"Specify the KSA in your Pod specification (\", _jsx(_components.code, {\n                  children: \"serviceAccountName\"\n                }), \").\"]\n              }), \"\\n\"]\n            }), \"\\n\"]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      \"data-type\": \"mermaid\",\n      children: _jsx(_components.code, {\n        className: \"language-mermaid\",\n        children: \"graph TD\\n    subgraph \\\"GKE Cluster\\\"\\n      Pod[\\\"Pod with Application\\\"] -- \\\"1. Uses KSA Token\\\" --> KSA[\\\"Kubernetes Service Account (KSA)<br><code>app-ksa</code>\\\"]\\n    end\\n    KSA -- \\\"2. IAM Binding allows KSA <br> to impersonate GSA (sts.token)\\\" --> GSA[\\\"Google Service Account (GSA)<br><code>gsa-name@PROJECT_ID.iam.gserviceaccount.com</code>\\\"]\\n    GSA -- \\\"3. GSA has IAM Permissions for\\\" --> GCPService[\\\"GCP Service<br>(e.g., Cloud Storage, BigQuery)\\\"]\\n    Pod -- \\\"4. Makes API Call to GCP Service<br>(Authenticated as GSA)\\\" --> GCPService\\n\"\n      })\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"Security Best Practices\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Principle of Least Privilege\"\n        }), \": Grant only necessary IAM roles to GSAs and RBAC permissions to KSAs.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Enable Private Clusters\"\n        }), \": Restrict public IP addresses for nodes and limit control plane endpoint access.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Use Network Policies\"\n        }), \": Control pod-to-pod communication within the cluster. Deny all by default and allow specific traffic flows.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Regularly Update Clusters and Node Pools\"\n        }), \": GKE release channels help automate this.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Use Shielded GKE Nodes\"\n        }), \": Provides verifiable integrity of your nodes.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Binary Authorization\"\n        }), \": Enforce that only trusted container images are deployed on GKE.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Manage Secrets Securely\"\n        }), \": Use Kubernetes Secrets, potentially integrated with Google Secret Manager for enhanced security.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Scan Container Images\"\n        }), \": Use Artifact Analysis in Artifact Registry or Google Container Registry to scan for vulnerabilities.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Monitoring and Logging with Cloud Operations\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"GKE integrates seamlessly with Google Cloud's operations suite (formerly Stackdriver) for comprehensive monitoring and logging.\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Cloud Monitoring\"\n        }), \":\", \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Collects metrics, events, and metadata from GKE clusters, Pods, and containers.\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Provides dashboards to visualize performance and health.\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Allows setting up alerting policies for critical conditions.\"\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"By default, system metrics are collected. You can enable control plane metrics and configure application-specific metrics collection (e.g., with Prometheus).\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [_jsx(_components.strong, {\n          children: \"Cloud Logging\"\n        }), \":\", \"\\n\", _jsxs(_components.ul, {\n          children: [\"\\n\", _jsx(_components.li, {\n            children: \"Collects logs from your GKE cluster components and your applications running in Pods.\"\n          }), \"\\n\", _jsxs(_components.li, {\n            children: [\"Logs are automatically collected for \", _jsx(_components.code, {\n              children: \"stdout\"\n            }), \" and \", _jsx(_components.code, {\n              children: \"stderr\"\n            }), \" from containers.\"]\n          }), \"\\n\", _jsx(_components.li, {\n            children: \"Provides powerful querying, analysis, and log-based metrics.\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"You can access these tools directly from the Google Cloud Console under the \\\"Kubernetes Engine\\\", \\\"Monitoring\\\", and \\\"Logging\\\" sections.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Real-World Example: Blue-Green Deployment Strategy\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"A blue-green deployment strategy minimizes downtime and risk by running two identical environments (\\\"blue\\\" for current, \\\"green\\\" for new) and switching traffic from blue to green once the new version is verified.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.strong, {\n        children: \"Simplified Approach:\"\n      })\n    }), \"\\n\", _jsxs(_components.ol, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: \"Current State (Blue):\"\n          }), \" You have \", _jsx(_components.code, {\n            children: \"my-app-v1\"\n          }), \" (Deployment) exposed via a Service \", _jsx(_components.code, {\n            children: \"my-app-svc\"\n          }), \" that selects Pods with \", _jsx(_components.code, {\n            children: \"app: my-app, version: v1\"\n          }), \".\"]\n        }), \"\\n\", _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-yaml\",\n            children: \"# service.yaml (initial)\\napiVersion: v1\\nkind: Service\\nmetadata:\\n  name: my-app-svc\\nspec:\\n  selector:\\n    app: my-app\\n    version: v1 # Points to blue\\n  ports:\\n    - protocol: TCP\\n      port: 80\\n      targetPort: 8080\\n  type: LoadBalancer\\n\"\n          })\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: \"Deploy New Version (Green):\"\n          }), \" Deploy \", _jsx(_components.code, {\n            children: \"my-app-v2\"\n          }), \" (Deployment) with Pods labeled \", _jsx(_components.code, {\n            children: \"app: my-app, version: v2\"\n          }), \". At this point, it doesn't receive live traffic.\"]\n        }), \"\\n\", _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-bash\",\n            children: \"# Example: kubectl apply -f deployment-v2.yaml\\n# (deployment-v2.yaml has labels app: my-app, version: v2)\\n\"\n          })\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: \"Switch Traffic (Service Update):\"\n          }), \" Update the Service \", _jsx(_components.code, {\n            children: \"my-app-svc\"\n          }), \" to select Pods with \", _jsx(_components.code, {\n            children: \"version: v2\"\n          }), \".\"]\n        }), \"\\n\", _jsx(_components.pre, {\n          children: _jsx(_components.code, {\n            className: \"language-bash\",\n            children: \"# Update service.yaml or use kubectl patch\\nkubectl patch service my-app-svc -p '{\\\"spec\\\":{\\\"selector\\\":{\\\"version\\\":\\\"v2\\\"}}}'\\n\"\n          })\n        }), \"\\n\", _jsxs(_components.p, {\n          children: [\"Now \", _jsx(_components.code, {\n            children: \"my-app-svc\"\n          }), \" directs traffic to \", _jsx(_components.code, {\n            children: \"my-app-v2\"\n          }), \".\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: \"Monitor Green:\"\n          }), \" Thoroughly test and monitor the \", _jsx(_components.code, {\n            children: \"v2\"\n          }), \" application.\"]\n        }), \"\\n\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"\\n\", _jsxs(_components.p, {\n          children: [_jsx(_components.strong, {\n            children: \"Decommission Blue (Optional/Later):\"\n          }), \" If \", _jsx(_components.code, {\n            children: \"v2\"\n          }), \" is stable, you can scale down or delete the \", _jsx(_components.code, {\n            children: \"my-app-v1\"\n          }), \" Deployment. If issues arise with \", _jsx(_components.code, {\n            children: \"v2\"\n          }), \", you can quickly roll back by patching the service selector back to \", _jsx(_components.code, {\n            children: \"version: v1\"\n          }), \".\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      \"data-type\": \"mermaid\",\n      children: _jsx(_components.code, {\n        className: \"language-mermaid\",\n        children: \"graph LR\\n    User[\\\"User Traffic\\\"] --> Router[\\\"K8s Service: my-app-svc<br>(Acts as Router)\\\"]\\n\\n    subgraph \\\"Phase 1: Blue is Live\\\"\\n        Router --\\\"Selector: version=v1\\\"--> BlueDep[\\\"Deployment: my-app-v1 (Blue)<br>Pods (v1) - Receiving Traffic\\\"]\\n        GreenDepStandby[\\\"Deployment: my-app-v2 (Green)<br>Pods (v2) - Standby, No Traffic\\\"]\\n        style BlueDep fill:#ADD8E6,stroke:#333\\n        style GreenDepStandby fill:#lightgrey,stroke:#333\\n    end\\n\\n    %% In text: \\\"Service selector is updated from version=v1 to version=v2\\\"\\n\\n    subgraph \\\"Phase 2: Green is Live (After Service Update)\\\"\\n        Router --\\\"Selector: version=v2\\\"--> GreenDepActive[\\\"Deployment: my-app-v2 (Green)<br>Pods (v2) - Receiving Traffic\\\"]\\n        BlueDepStandby[\\\"Deployment: my-app-v1 (Blue)<br>Pods (v1) - Standby/Decommissioned\\\"]\\n        style GreenDepActive fill:#90EE90,stroke:#333\\n        style BlueDepStandby fill:#lightgrey,stroke:#333\\n    end\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.em, {\n        children: \"Note: More sophisticated blue-green or canary deployments often involve traffic splitting using tools like Istio, Linkerd, or Ingress controllers.\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Kubernetes on Google Cloud, through GKE, offers a powerful and flexible platform for modern application delivery. By leveraging GKE's managed capabilities, robust security features, seamless integration with the GCP ecosystem, and by following operational best practices, development teams can build, deploy, and scale applications with greater speed, confidence, and efficiency.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This guide provides a solid foundation. To continue your journey:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsxs(_components.li, {\n        children: [\"Explore \", _jsx(_components.strong, {\n          children: \"GKE Autopilot\"\n        }), \" for a more hands-off experience.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Dive deeper into \", _jsx(_components.strong, {\n          children: \"Workload Identity\"\n        }), \" for secure GCP service access.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Learn about \", _jsx(_components.strong, {\n          children: \"Network Policies\"\n        }), \" for fine-grained traffic control.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Integrate GKE into your \", _jsx(_components.strong, {\n          children: \"CI/CD pipelines\"\n        }), \" using Cloud Build, Jenkins, GitLab CI, or GitHub Actions.\"]\n      }), \"\\n\", _jsxs(_components.li, {\n        children: [\"Investigate \", _jsx(_components.strong, {\n          children: \"service meshes\"\n        }), \" like Istio or Anthos Service Mesh for advanced traffic management, observability, and security for microservices.\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"For more details, always refer to the official \", _jsx(_components.a, {\n        href: \"https://cloud.google.com/kubernetes-engine/docs\",\n        children: \"GKE documentation\"\n      }), \" and start experimenting with your own clusters and applications today.\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}2:["$","article",null,{"className":"container mx-auto px-4 py-8 max-w-4xl","children":[["$","div",null,{"className":"mb-8","children":[["$","div",null,{"className":"flex items-center text-sm text-gray-500 dark:text-gray-400 mb-4","children":[["$","span",null,{"children":"2025-05-12"}],["$","span",null,{"className":"mx-2","children":"â¢"}],["$","span",null,{"children":["16"," min read"]}]]}],["$","h1",null,{"className":"text-4xl font-bold mb-4","children":"Mastering Kubernetes on Google Cloud: A Comprehensive Guide"}],["$","p",null,{"className":"text-xl text-gray-600 dark:text-gray-300 mb-6","children":"Dive deep into deploying, managing, and scaling containerized applications using Kubernetes on Google Cloud Platform (GCP). This comprehensive guide covers GKE architecture, detailed setup, operational best practices, advanced deployment strategies, and real-world examples visualized with diagrams."}],["$","div",null,{"className":"aspect-video relative overflow-hidden rounded-lg mb-8","children":["$","img",null,{"src":"https://ik.imagekit.io/quadrate/assets/img/dotnetevangelist/mastering-kubernetes-on-google-cloud.png?updatedAt=1747068844547","alt":"Mastering Kubernetes on Google Cloud: A Comprehensive Guide","className":"object-cover w-full h-full"}]}],["$","div",null,{"className":"flex flex-wrap gap-2 mb-8","children":[["$","$L7","Kubernetes",{"href":"/tags/Kubernetes","className":"text-sm bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 px-3 py-1 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Kubernetes"]}],["$","$L7","Google Cloud",{"href":"/tags/Google Cloud","className":"text-sm bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 px-3 py-1 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Google Cloud"]}],["$","$L7","GKE",{"href":"/tags/GKE","className":"text-sm bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 px-3 py-1 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","GKE"]}],["$","$L7","DevOps",{"href":"/tags/DevOps","className":"text-sm bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 px-3 py-1 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","DevOps"]}],["$","$L7","Containers",{"href":"/tags/Containers","className":"text-sm bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 px-3 py-1 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Containers"]}],["$","$L7","Microservices",{"href":"/tags/Microservices","className":"text-sm bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 px-3 py-1 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Microservices"]}],["$","$L7","CI/CD",{"href":"/tags/CI/CD","className":"text-sm bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 px-3 py-1 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","CI/CD"]}]]}]]}],["$","$Lc",null,{"content":"$d"}],["$","div",null,{"className":"mt-12 pt-8 border-t border-gray-200 dark:border-gray-800","children":[["$","h2",null,{"className":"text-2xl font-bold mb-4","children":"Share this post"}],["$","div",null,{"className":"flex space-x-4","children":[["$","a",null,{"href":"https://twitter.com/intent/tweet?text=Mastering%20Kubernetes%20on%20Google%20Cloud%3A%20A%20Comprehensive%20Guide&url=https%3A%2F%2Fdotnetevangelist.com%2Fblog%2Fmastering-kubernetes-google-cloud","target":"_blank","rel":"noopener noreferrer","className":"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded flex items-center","children":"Twitter"}],["$","a",null,{"href":"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fdotnetevangelist.com%2Fblog%2Fmastering-kubernetes-google-cloud","target":"_blank","rel":"noopener noreferrer","className":"bg-blue-800 hover:bg-blue-900 text-white px-4 py-2 rounded flex items-center","children":"Facebook"}],["$","a",null,{"href":"https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Fdotnetevangelist.com%2Fblog%2Fmastering-kubernetes-google-cloud","target":"_blank","rel":"noopener noreferrer","className":"bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded flex items-center","children":"LinkedIn"}]]}]]}],["$","div",null,{"className":"mt-16 pt-8 border-t border-gray-200 dark:border-gray-800","children":[["$","h2",null,{"className":"text-2xl font-bold mb-4","children":"Related Articles"}],["$","div",null,{"className":"grid grid-cols-1 md:grid-cols-2 gap-6","children":[["$","div",null,{"className":"border border-gray-200 dark:border-gray-800 rounded-lg overflow-hidden shadow-sm hover:shadow-md transition-shadow","children":[["$","div",null,{"className":"aspect-video relative overflow-hidden","children":["$","$Le",null,{"src":"https://ik.imagekit.io/quadrate/assets/img/dotnetevangelist/MultiFactorAuthentication.jpg?updatedAt=1746813307808","alt":"How to Enable Multi-Factor Authentication using Microsoft Authenticator","fill":true,"sizes":"(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw","className":"object-cover","priority":false}]}],["$","div",null,{"className":"p-4","children":[["$","div",null,{"className":"flex items-center text-sm text-gray-500 dark:text-gray-400 mb-2","children":[["$","span",null,{"children":"Oct 6, 2024"}],["$","span",null,{"className":"mx-2","children":"â¢"}],["$","span",null,{"children":["4"," min read"]}]]}],["$","h2",null,{"className":"text-xl font-semibold mb-2","children":["$","$L7",null,{"href":"/blog/how-to-enable-multi-factor-authentication-using-microsoft-authenticator","className":"hover:text-blue-600 dark:hover:text-blue-400","children":"How to Enable Multi-Factor Authentication using Microsoft Authenticator"}]}],["$","p",null,{"className":"text-gray-600 dark:text-gray-300 mb-4 line-clamp-3","children":"Learn how to enable multi-factor authentication using Microsoft Authenticator for your Office 365 account."}],["$","div",null,{"className":"flex flex-wrap gap-2","children":[["$","$L7","O365",{"href":"/tags/O365","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","O365"]}],["$","$L7","Mfa",{"href":"/tags/Mfa","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Mfa"]}],["$","$L7","2fa",{"href":"/tags/2fa","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","2fa"]}],["$","$L7","Authenticator",{"href":"/tags/Authenticator","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Authenticator"]}],["$","$L7","Security",{"href":"/tags/Security","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Security"]}],["$","$L7","Microsoft",{"href":"/tags/Microsoft","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Microsoft"]}]]}]]}]]}],["$","div",null,{"className":"border border-gray-200 dark:border-gray-800 rounded-lg overflow-hidden shadow-sm hover:shadow-md transition-shadow","children":[["$","div",null,{"className":"aspect-video relative overflow-hidden","children":["$","$Le",null,{"src":"https://ik.imagekit.io/quadrate/assets/img/dotnetevangelist/image.png?updatedAt=1746822184721","alt":"Graphs in C#","fill":true,"sizes":"(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw","className":"object-cover","priority":false}]}],["$","div",null,{"className":"p-4","children":[["$","div",null,{"className":"flex items-center text-sm text-gray-500 dark:text-gray-400 mb-2","children":[["$","span",null,{"children":"Dec 10, 2023"}],["$","span",null,{"className":"mx-2","children":"â¢"}],["$","span",null,{"children":["2"," min read"]}]]}],["$","h2",null,{"className":"text-xl font-semibold mb-2","children":["$","$L7",null,{"href":"/blog/graph-in-csharp","className":"hover:text-blue-600 dark:hover:text-blue-400","children":"Graphs in C#"}]}],["$","p",null,{"className":"text-gray-600 dark:text-gray-300 mb-4 line-clamp-3","children":"An introduction to implementing graphs in C# with a simple example"}],["$","div",null,{"className":"flex flex-wrap gap-2","children":[["$","$L7","C#",{"href":"/tags/C#","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","C#"]}],["$","$L7","Graphs",{"href":"/tags/Graphs","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Graphs"]}],["$","$L7","Data Structures",{"href":"/tags/Data Structures","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Data Structures"]}],["$","$L7","Algorithms",{"href":"/tags/Algorithms","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Algorithms"]}],["$","$L7","Programming",{"href":"/tags/Programming","className":"text-xs px-2 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-700","children":["#","Programming"]}]]}]]}]]}]]}]]}]]}]
b:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Mastering Kubernetes on Google Cloud: A Comprehensive Guide | .NET Evangelist"}],["$","meta","3",{"name":"description","content":"Dive deep into deploying, managing, and scaling containerized applications using Kubernetes on Google Cloud Platform (GCP). This comprehensive guide covers GKE architecture, detailed setup, operational best practices, advanced deployment strategies, and real-world examples visualized with diagrams."}],["$","meta","4",{"property":"og:title","content":"Mastering Kubernetes on Google Cloud: A Comprehensive Guide"}],["$","meta","5",{"property":"og:description","content":"Dive deep into deploying, managing, and scaling containerized applications using Kubernetes on Google Cloud Platform (GCP). This comprehensive guide covers GKE architecture, detailed setup, operational best practices, advanced deployment strategies, and real-world examples visualized with diagrams."}],["$","meta","6",{"property":"og:image","content":"https://ik.imagekit.io/quadrate/assets/img/dotnetevangelist/mastering-kubernetes-on-google-cloud.png?updatedAt=1747068844547"}],["$","meta","7",{"property":"og:type","content":"article"}],["$","meta","8",{"property":"article:published_time","content":"2025-05-12"}],["$","meta","9",{"property":"article:author","content":"Your Name"}],["$","meta","10",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","11",{"name":"twitter:title","content":"Mastering Kubernetes on Google Cloud: A Comprehensive Guide"}],["$","meta","12",{"name":"twitter:description","content":"Dive deep into deploying, managing, and scaling containerized applications using Kubernetes on Google Cloud Platform (GCP). This comprehensive guide covers GKE architecture, detailed setup, operational best practices, advanced deployment strategies, and real-world examples visualized with diagrams."}],["$","meta","13",{"name":"twitter:image","content":"https://ik.imagekit.io/quadrate/assets/img/dotnetevangelist/mastering-kubernetes-on-google-cloud.png?updatedAt=1747068844547"}],["$","link","14",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}],["$","meta","15",{"name":"next-size-adjust"}]]
1:null
