---
// PageLoader.astro - A cool animated page loader component
---

<div id="page-loader" class="fixed inset-0 z-50 flex items-center justify-center bg-white dark:bg-[#0a0910] transition-opacity duration-500">
  <div class="relative">
    <!-- Animated spinner with gradient -->
    <div class="w-16 h-16 border-4 border-t-transparent border-blue-500 dark:border-purple-500 rounded-full animate-spin"></div>
    
    <!-- Inner pulsing circle -->
    <div class="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-8 h-8 bg-gradient-to-br from-blue-400 to-purple-600 dark:from-purple-500 dark:to-blue-500 rounded-full animate-pulse"></div>
    
    <!-- Loading text -->
    <p class="absolute -bottom-8 left-1/2 -translate-x-1/2 text-sm font-medium text-stone-600 dark:text-stone-300">
      Loading<span class="animate-ellipsis">...</span>
    </p>
  </div>
</div>

<style>
  @keyframes ellipsis {
    0% { content: '.'; }
    33% { content: '..'; }
    66% { content: '...'; }
    100% { content: ''; }
  }
  
  .animate-ellipsis::after {
    content: '';
    animation: ellipsis 1.5s infinite steps(1);
  }
</style>

<script is:inline>
  // This script runs immediately when it's encountered
  // Function to hide the loader
  function hideLoader() {
    const loader = document.getElementById('page-loader');
    if (loader) {
      loader.classList.add('opacity-0');
      // Remove from DOM after fade out animation completes
      setTimeout(() => {
        loader.style.display = 'none';
      }, 500);
    }
  }

  // Try multiple approaches to ensure the loader hides
  // 1. On window load (most reliable for complete page load)
  window.addEventListener('load', () => {
    hideLoader();
  });

  // 2. DOMContentLoaded as backup
  document.addEventListener('DOMContentLoaded', () => {
    hideLoader();
  });

  // 3. Fallback timeout in case the events don't fire
  setTimeout(() => {
    hideLoader();
  }, 2000); // Force hide after 2 seconds regardless of page load status
</script>
