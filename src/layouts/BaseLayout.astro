---
import BaseHead from '@/components/BaseHead'
import Header from '@/components/Header'
import Footer from '@/components/Footer'
import ProviderTheme from '@/components/ProviderTheme'
import ProviderAnimations from '@/components/ProviderAnimations'
import TwSizeIndicator from '@/components/TwSizeIndicator'
const { title, description, image, articleDate } = Astro.props
---

<html lang='en' class='scroll-smooth'>
	<head>
		<BaseHead title={title} description={description} ogImage={image} articleDate={articleDate} />
		<ProviderTheme />
		<ProviderAnimations />
		<link rel="preconnect" href="https://pagead2.googlesyndication.com" />
		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
		<script async defer src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-5415404685631285"
						crossorigin="anonymous"></script>
		<style is:inline>
			/* Critical CSS */
			@media (max-width: 768px) {
				.image-container img {
					width: 100%;
					height: auto;
				}
			}
			body {
				margin-left: calc(100vw - 100%);
				opacity: 0;
				animation: fadeIn 0.5s ease-in forwards;
			}
			@keyframes fadeIn {
				to { opacity: 1; }
			}
			.lazy-image {
				opacity: 0;
				transition: opacity 0.3s ease-in-out;
			}
			.lazy-image.loaded {
				opacity: 1;
			}
		</style>
		<title>{title}</title>
	</head>

	<body class='bg-white text-stone-950 dark:bg-[#0a0910] dark:text-white'>
		<main
			class='px-5 sm:mx-auto sm:max-w-2xl sm:px-8 lg:px-0 antialiased md:max-w-6xl grid gap-12 mt-4 overflow-hidden md:overflow-visible'
		>
			<Header />
			<slot />
			<Footer />
		</main>
		{import.meta.env.DEV && <TwSizeIndicator />}
	</body>
</html>

<script>
	// Lazy load images
	document.addEventListener('DOMContentLoaded', function() {
		const images = document.querySelectorAll('img[loading="lazy"]');
		images.forEach(img => {
			img.classList.add('lazy-image');
			img.addEventListener('load', () => img.classList.add('loaded'));
		});
	});

	// Preload critical resources
	if ('connection' in navigator && (navigator.connection as any).effectiveType === '4g') {
		const preloadLinks = [
			'/fonts/your-main-font.woff2',
			'/critical.css'
		];
		preloadLinks.forEach(link => {
			const preload = document.createElement('link');
			preload.rel = 'preload';
			preload.as = link.endsWith('.woff2') ? 'font' : 'style';
			preload.href = link;
			document.head.appendChild(preload);
		});
	}
</script>
